{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"IBC",
				"IBConnectivtyNew"
			],
			[
				"place",
				"placeComboOrder"
			],
			[
				"Order",
				"OrderManagerOld"
			],
			[
				"IBCon",
				"IBConnectivity"
			],
			[
				"ke",
				"key_list"
			],
			[
				"key",
				"key_list"
			],
			[
				"cance",
				"cancel_uid"
			],
			[
				"con",
				"contract"
			],
			[
				"__",
				"__init__"
			],
			[
				"historical",
				"historicalDataUpdate"
			],
			[
				"histor",
				"history_manager"
			],
			[
				"order",
				"order_ids"
			],
			[
				"trade_coun",
				"trade_counter_max"
			],
			[
				"trade",
				"trade_ready_list"
			],
			[
				"check",
				"checkForTrade"
			],
			[
				"indica",
				"indicatorUpdate"
			],
			[
				"last",
				"last_indices"
			],
			[
				"prep",
				"prepareForTrade"
			],
			[
				"update",
				"updateTrackingGUI"
			],
			[
				"acti",
				"active_keys"
			],
			[
				"track",
				"trackingUpdate"
			],
			[
				"prio",
				"prioritize_uids"
			],
			[
				"py",
				"pyqtSlot"
			],
			[
				"pro",
				"propagate_updates"
			],
			[
				"prop",
				"prop_type"
			],
			[
				"profit",
				"profit_limit"
			],
			[
				"getOrder",
				"getOrderCount"
			],
			[
				"updateS",
				"updateStairLevels"
			],
			[
				"entr",
				"entry_count"
			],
			[
				"lock",
				"lockForWrite"
			],
			[
				"profi",
				"profit_id"
			],
			[
				"data",
				"dataUpdate"
			],
			[
				"new",
				"new_property"
			],
			[
				"log",
				"logStepEvents"
			],
			[
				"ini",
				"initializeThresholds"
			],
			[
				"getData",
				"getDataObject"
			],
			[
				"ind",
				"indicators"
			],
			[
				"indi",
				"indicatorUpdate"
			],
			[
				"column",
				"column_names"
			],
			[
				"em",
				"ema_columns"
			],
			[
				"col",
				"column_names"
			],
			[
				"ema",
				"ema_padded_frame"
			],
			[
				"compute",
				"computeEMAs"
			],
			[
				"comp",
				"computeRSIs"
			],
			[
				"com",
				"computeSteps"
			],
			[
				"stock",
				"stockCountUpdated"
			],
			[
				"Auto",
				"AutoTraderManager"
			],
			[
				"stop_",
				"stop_limit_check"
			],
			[
				"prof",
				"profit_take_check"
			],
			[
				"stop",
				"stoplossCheck"
			],
			[
				"tab",
				"tab_name"
			],
			[
				"connec",
				"connectSlotsToSignals"
			],
			[
				"listSe",
				"listSelection"
			],
			[
				"clean",
				"cleanupClosedApp"
			],
			[
				"App",
				"AppLauncher"
			],
			[
				"mes",
				"message_id"
			],
			[
				"tele",
				"telegram_signal"
			],
			[
				"mess",
				"message_type"
			],
			[
				"aler",
				"alert_lines"
			],
			[
				"message",
				"message_properties"
			],
			[
				"proces",
				"processTelegram"
			],
			[
				"pyqt",
				"pyqtSignal"
			],
			[
				"ca",
				"capturePlotAsImage"
			],
			[
				"par",
				"parseCommands"
			],
			[
				"selec",
				"selection_type"
			],
			[
				"frame",
				"_frame_buffer"
			],
			[
				"dat",
				"data_object"
			],
			[
				"layout",
				"layoutAboutToBeChanged"
			],
			[
				"Posit",
				"PositionDataManager"
			],
			[
				"accoun",
				"AccountSummaryEnd"
			],
			[
				"mar",
				"marketValue"
			],
			[
				"get",
				"getHistoryManagerIB"
			],
			[
				"fr",
				"freq_type"
			],
			[
				"Qt",
				"QueuedConnection"
			],
			[
				"stat",
				"start_time"
			],
			[
				"bar",
				"bar_types"
			],
			[
				"req",
				"req_id"
			],
			[
				"contract",
				"contractDetails"
			],
			[
				"symo",
				"symbol_name"
			],
			[
				"r",
				"requestContractDetails"
			],
			[
				"ib_",
				"ib_request_signal"
			],
			[
				"getHi",
				"getHistoryManagerIB"
			],
			[
				"histo",
				"history_manager"
			],
			[
				"Position",
				"PositionObject"
			],
			[
				"P",
				"PositionDataModel"
			],
			[
				"Po",
				"PositionDataModel"
			],
			[
				"_p",
				"_parameter"
			],
			[
				"DATA",
				"DATA_DID_CHANGE"
			],
			[
				"table",
				"tableDataUpdate"
			],
			[
				"colu",
				"column_index"
			],
			[
				"selection",
				"selection_type"
			],
			[
				"exp",
				"days_to_expiration"
			],
			[
				"Con",
				"Constants"
			],
			[
				"OPTION",
				"OPTIONS_ONLY"
			],
			[
				"buffere",
				"buffered_data"
			],
			[
				"position",
				"position_manager"
			],
			[
				"ins",
				"instrument"
			],
			[
				"set",
				"setData"
			],
			[
				"da",
				"data_buffers"
			],
			[
				"new_",
				"new_positions"
			],
			[
				"proce",
				"processRequest"
			],
			[
				"sub",
				"sub_signal"
			],
			[
				"reqAccon",
				"reqAccountUpdates"
			],
			[
				"ap",
				"apiUpdate"
			],
			[
				"getPos",
				"getNewPositionManager"
			],
			[
				"posi",
				"position_manager"
			],
			[
				"Fina",
				"FinazonBufferedDataManager"
			],
			[
				"FIN",
				"FinazonBufferedDataManager"
			],
			[
				"buff",
				"buffered_manager"
			],
			[
				"BUFFER",
				"BUFFER_FOLDER"
			],
			[
				"messa",
				"message_id"
			],
			[
				"start",
				"start_time"
			],
			[
				"down",
				"down_emas"
			],
			[
				"DataB",
				"DataBuffer"
			],
			[
				"pr",
				"previous_row"
			],
			[
				"updated",
				"updated_bars"
			],
			[
				"IB",
				"IB_SOURCE"
			],
			[
				"smalle",
				"smallest_request"
			],
			[
				"min",
				"min_start_date"
			],
			[
				"request",
				"request_bar_type"
			],
			[
				"upda",
				"updated_bar_types"
			],
			[
				"upd",
				"updated_uids"
			],
			[
				"dail",
				"latest_daily_rsi"
			],
			[
				"lat",
				"latest_daily_rsi"
			],
			[
				"perfo",
				"performPeriodUpdates"
			],
			[
				"Buffe",
				"BufferedDataManager"
			],
			[
				"ove",
				"overview_model"
			],
			[
				"indic",
				"indicators"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 142 files for \"latest_price_sign\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n   69:         self.history_manager.latest_price_signal.connect(self.priceUpdate)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py:\n   92:         self.ib_interface.latest_price_signal.connect(self.returnLatestPrice, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   41:     latest_price_signal = pyqtSignal(float, str)\n  340:             self.latest_price_signal.emit(price, tick_type_str)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n   62:     latest_price_signal = pyqtSignal(float, str)\n  198:         self.latest_price_signal.emit(price, tick_type_str)\n\n6 matches across 4 files\n\n\nSearching 142 files for \"(str, flo\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n  161:     @pyqtSlot(str, float)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   58:     relay_contract_id_signal = pyqtSignal(str, float, str, int)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/OptionManagement/OptionChainManager.py:\n  664:     @pyqtSlot(str, float, str, int)\n\n3 matches across 3 files\n\n\nSearching 142 files for \"(not (self.queue_timer.isActive())) and self.ready\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  200:         if (not (self.queue_timer.isActive())) and self.readyForRequests():\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  206:         if (not (self.queue_timer.isActive())) and self.readyForRequests():\n\n2 matches across 2 files\n\n\nSearching 142 files for \"startConnection\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   63:         self.startWorkerThread(identifier, symbol_manager, run_function=symbol_manager.startConnection)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py:\n   63:         # self.ib_thread.started.connect(self.ib_interface.startConnection)\n   67:         self.ib_interface.startConnection()\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   89:     def startConnection(self):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  118:     def startConnection(self):\n  119:         print(f\"{self.name}.startConnection\")\n\n6 matches across 4 files\n\n\nSearching 142 files for \"self.ib_request_signal.emit({'type': 'cancel\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py:\n   99:             self.ib_request_signal.emit({'type': 'cancelMktData', 'req_id': Constants.STK_PRICE_REQID})\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n   87:             self.ib_request_signal.emit({'type': 'cancelMktData', 'req_id': Constants.STK_PRICE_REQID})\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n  113:                 self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n  116:                 self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n  119:                 self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n  183:             self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n  188:             self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n  193:             self.ib_request_signal.emit({'type': 'cancelHistoricalData', 'req_id': req_id})\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/OptionManagement/OptionChainManager.py:\n  412:                 self.ib_request_signal.emit({'type': 'cancelMktData', 'req_id': req_id})\n  417:                 self.ib_request_signal.emit({'type': 'cancelMktData', 'req_id': req_id})\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  427:                     self.ib_request_signal.emit({'type': 'cancelOrder', 'order_id': order_id})\n\n11 matches across 5 files\n\n\nSearching 142 files for \"OrderMana\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/appLauncher.py:\n  134:         order_manager = self.getOrderManager()\n  156:         order_manager = self.getOrderManager()\n  194:         order_manager = self.getOrderManager() \n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   22: from dataHandling.TradeManagement.OrderManagement import OrderManager\n  153:     def getOrderManager(self, identifier='general_order_manager'):\n  157:             order_manager = OrderManager()\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  188: class OrderManager(DataManager):\n  198:         super().__init__(callback, name=\"OrderManager\")\n  263:         # print(\"OrderManager.getNextOrderIDs\")\n  265:         # print(\"OrderManager.getNextOrderIDs 1\")\n  269:         # print(\"OrderManager.getNextOrderIDs 4\")\n  316:         # print(\"OrderManager.cancelAllOrders\")\n  424:             # print(f\"OrderManager.killStairTrade {current_ids}\")\n  432:         # print(f\"OrderManager.orderEdit {order_id} {properties}\")\n  591:         print('OrderManager.getOrderCount')\n  691:         # print(\"OrderManager.adjustStairTradeIfNeeded\")\n  812:         # print(\"OrderManager.getProfitProps\")\n\n18 matches across 3 files\n\n\nSearching 142 files for \"DataManager\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   18: # from dataHandling.HistoryManagement.HistoricalDataManagement import HistoricalDataManager\n   19: from dataHandling.HistoryManagement.HistoryManagerImproved import HistoricalDataManager\n   21: from dataHandling.HistoryManagement.FinazonDataManager import FinazonDataManager\n   23: from dataHandling.TradeManagement.PositionDataManagement import PositionDataManager\n   24: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n   25: from dataHandling.HistoryManagement.FinazonBufferedManager import FinazonBufferedDataManager \n   27: from dataHandling.DataManagement import DataManager\n   53:         position_manager = PositionDataManager()\n   97:             history_manager = HistoricalDataManager(self.local_address, int(self.trading_socket), self.next_id, name=\"HistoricalDataManager\")\n  110:         return BufferedDataManager(history_manager)\n  142:             finazon_history_manager = FinazonDataManager()\n  150:         return FinazonBufferedDataManager(finazon_history_manager)\n  184:             self.data_management = DataManager(callback=self.apiUpdate)\n\n~/Dropbox/pythonProjects/IB_apps/apps/alerting/alertManager.py:\n   28: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n   29: from dataHandling.HistoryManagement.FinazonBufferedManager import FinazonBufferedDataManager \n   66:         if isinstance(buffered_manager, FinazonBufferedDataManager):\n   69:         elif isinstance(buffered_manager, BufferedDataManager):\n   93:         if isinstance(buffered_manager, FinazonBufferedDataManager):\n   95:         elif isinstance(buffered_manager, BufferedDataManager):\n\n~/Dropbox/pythonProjects/IB_apps/apps/alerting/AlertProcessor.py:\n   18: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/autoTrader.py:\n   28: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n   29: from dataHandling.HistoryManagement.FinazonBufferedManager import FinazonBufferedDataManager \n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   78:         print(f\"LiveBufferedDataManager.setStockList is performed on {int(QThread.currentThreadId())}\")\n   88:         print(f\"LiveBufferedDataManager.apiUpdate {signal}\")\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerPrevious.py:\n   18: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n   18: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/ComparisonProcessor.py:\n   27: from dataHandling.HistoryManagement.SpecBufferedManager import SpecBufferedDataManager as BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/listManaging/listManager.py:\n   32: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/movers/MoversProcessor.py:\n   29: from dataHandling.HistoryManagement.BufferedManager import BufferedDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/optionPositions/optionsPositionListing.py:\n   37: from dataHandling.TradeManagement.PositionDataManagement import PositionDataManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TickerProcessor.py:\n   19: from dataHandling.HistoryManagement.LiveBufferedManager import LiveDataManager\n   35:         self.buffered_manager = LiveDataManager(history_manager)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py:\n   24: class DataManager(QObject):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n   22: from .DataManagement import DataManager\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/UserDataManagement.py:\n   76:     print(f\"UserDataManager.readStockList {file_name}\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/BufferedManager.py:\n   27: class BufferedDataManager(QObject):\n   93:         print(f\"BufferedDataManager.apiUpdate {signal}\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonBufferedManager.py:\n   21: from .BufferedManager import BufferedDataManager\n   30: class FinazonBufferedDataManager(BufferedDataManager):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonDataManager.py:\n  107: class FinazonDataManager(QObject):\n  156:         # print(\"FinazonDataManager.updatedBars\")\n  187:         print(\"FinazonDataManager.createWebSocketForTickers\")\n  245:         print(f\"FinazonDataManager.requestUpdates {keep_up_to_date}\")\n  473:         # print(f\"FinazonDataManager.barsFromSmallerData {bar_type}\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n   35: from dataHandling.DataManagement import DataManager\n   39: class HistoricalDataManager(DataManager):\n   71:         super().__init__(callback=callback, name=\"HistoricalDataManager\") \n  128:         print(\"HistoricalDataManager.performUidCleanupFor\")\n  145:         print(f\"HistoricalDataManager.cancelActiveRequests {int(QThread.currentThreadId())}\")\n  159:         print(\"HistoricalDataManager.cleanupReqDicts\")\n  266:         # print(f\"HistoricalDataManager.addRequest {req_id} {end_date} {period} {bar_type}\")\n  310:         # print(f\"HistoricalDataManager.createUpdateRequests {keep_up_to_date} {propagate_updates}\")\n  390:         # print(f\"HistoricalDataManager on thread: {int(QThread.currentThreadId())}\")\n  400:         print(f\"HistoricalDataManager.executeHistoryRequest on thread: {int(QThread.currentThreadId())}\")\n  542:         # print(f\"HistoricalDataManager.historyError {req_id}\")\n  567:         # print(f\"HistoricalDataManager.signalHistoryDataComplete\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoryManagerImproved.py:\n   48: class HistoricalDataManager(IBConnectivity, QObject):\n  138:         print(\"HistoricalDataManager.performUidCleanupFor\")\n  155:         print(f\"HistoricalDataManager.cancelActiveRequests {int(QThread.currentThreadId())}\")\n  169:         print(\"HistoricalDataManager.cleanupReqDicts\")\n  276:         # print(f\"HistoricalDataManager.addRequest {req_id} {end_date} {period} {bar_type}\")\n  320:         # print(f\"HistoricalDataManager.createUpdateRequests {keep_up_to_date} {propagate_updates}\")\n  400:         # print(f\"HistoricalDataManager on thread: {int(QThread.currentThreadId())}\")\n  410:         print(f\"HistoricalDataManager.executeHistoryRequest on thread: {int(QThread.currentThreadId())}\")\n  561:         # print(f\"HistoricalDataManager.historyError {req_id}\")\n  591:         # print(f\"HistoricalDataManager.signalHistoryDataComplete\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/LiveBufferedManager.py:\n   26: class LiveDataManager(QObject):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/SpecBufferedManager.py:\n   20: from .BufferedManager import BufferedDataManager\n   25: class SpecBufferedDataManager(BufferedDataManager):\n   49:         print(f\"SpecBufferedDataManager.apiUpdate {signal}\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/OptionManagement/OptionChainManager.py:\n   33: from dataHandling.DataManagement import DataManager\n   41: class OptionChainManager(DataManager):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n   25: from dataHandling.DataManagement import DataManager\n  188: class OrderManager(DataManager):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/PositionDataManagement.py:\n   27: from dataHandling.DataManagement import DataManager\n   30: class PositionDataManager(DataManager):\n   64:         # print(f\"PositionDataManager.accountUpdate {signal} {sub_signal}\")\n\n84 matches across 25 files\n\n\nSearching 142 files for \".HistoryManagerImprove\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   19: from dataHandling.HistoryManagement.HistoryManagerImproved import HistoricalDataManager\n\n1 match in 1 file\n\n\nSearching 142 files for \"history_manager\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/appLauncher.py:\n  157:         history_manager = self.getHistoryManagerIB(identifier='manual_trader_history')\n  159:         new_app = TradeMaker(order_manager, history_manager, symbol_manager)\n  192:         buffered_manager = self.getHistoryManagerIB(identifier='trading_history_manager')\n  195:         trader_app = AutoTraderManager(history_manager, order_manager, indicator_processor, QThread())\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   37:     history_manager = None\n   93:         if identifier == 'general_history' and (self.history_manager is not None):\n   94:             history_manager = self.history_manager\n   96:             history_manager = HistoricalDataManager(self.local_address, int(self.trading_socket), self.next_id, name=\"HistoricalDataManager\")\n   97:             history_manager.api_updater.connect(self.apiUpdate, Qt.QueuedConnection)\n   99:             self.startWorkerThread(identifier, history_manager, run_function=history_manager.startConnection)\n  102:                 self.history_manager = history_manager    \n  104:         return history_manager\n  108:         history_manager = self.getHistoryManagerIB(identifier)\n  109:         return BufferedDataManager(history_manager)\n  138:         if identifier == 'general_history' and (self.history_manager is not None):\n  139:             finazon_history_manager = self.history_manager\n  141:             finazon_history_manager = FinazonDataManager()\n  143:             finazon_history_manager.moveToThread(self.finazon_thread)\n  144:             self.finazon_thread.started.connect(finazon_history_manager.run) #_ib_client_slot)\n  147:                 self.history_manager = finazon_history_manager\n  149:         return FinazonBufferedDataManager(finazon_history_manager)\n\n~/Dropbox/pythonProjects/IB_apps/apps/alerting/alertManager.py:\n  100:         buffered_manager.history_manager.api_updater.connect(self.apiUpdate, Qt.QueuedConnection)\n  108:         self.update_frequency_signal.connect(buffered_manager.history_manager.setFrequency, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/apps/alerting/AlertProcessor.py:\n  286:         buffered_manager.history_manager.addNewListener(self, self.apiUpdate)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/autoTrader.py:\n   53:     def __init__(self, history_manager, order_manager, indicator_processor, processor_thread):\n   58:         self.prepTrackerProcessor(order_manager, history_manager, indicator_processor, processor_thread)\n   61:     def prepTrackerProcessor(self, order_manager, history_manager, indicator_processor, processor_thread):\n   63:         self.data_processor = TrackerProcessor(order_manager, history_manager, indicator_processor)\n   71:         self.update_frequency_signal.connect(history_manager.setFrequency, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   47:     def __init__(self, history_manager, name=\"LiveBufferedManager\"):\n   51:         self.history_manager = history_manager\n   52:         self.data_buffers = history_manager.getDataBuffer()\n   54:         self.history_manager.addNewListener(self, self.apiUpdate)\n   68:         print(self.history_manager)\n   69:         self.reset_signal.connect(self.history_manager.cancelActiveRequests, Qt.QueuedConnection)\n   70:         self.create_request_signal.connect(self.history_manager.createRequestsForContract, Qt.QueuedConnection)\n   71:         self.request_update_signal.connect(self.history_manager.requestUpdates, Qt.QueuedConnection)\n   72:         self.execute_request_signal.connect(self.history_manager.iterateHistoryRequests, Qt.QueuedConnection)\n  108:         if needs_disconnect: self.history_manager.cleanup_done_signal.disconnect()\n  124:         if needs_disconnect: self.history_manager.cleanup_done_signal.disconnect()\n  140:         if self.history_manager.is_updating:\n  141:             print(\"We trigger a reset in history_manager\")\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerPrevious.py:\n   50:         self.buffered_manager.history_manager.addNewListener(self, self.apiUpdate)\n   74:         self.priority_signal.connect(self.buffered_manager.history_manager.setPriorityFor, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n   54:     def __init__(self, order_manager, history_manager, indicator_processor):\n   60:         self.buffered_manager = LiveBufferedManager(history_manager)\n   61:         self.data_buffers = history_manager.getDataBuffer()\n   77:         self.priority_signal.connect(self.buffered_manager.history_manager.setPriorityFor, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/comparisonLists.py:\n   63:     def __init__(self, history_manager, processor_thread):\n   67:         self.setupProcessor(history_manager, processor_thread)\n   83:     def setupProcessor(self, history_manager, processor_thread):\n   84:         self.data_processor = ComparisonProcessor(history_manager, MAIN_BAR_TYPES, self.stock_list)\n  383:                 self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  384:                 #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/dataDownloading/dataDownloader.py:\n   34:     def __init__(self, symbol_manager, history_manager):\n   38:         self.history_manager = history_manager\n   39:         self.history_manager.addNewListener(self, self.apiUpdate)\n   56:             self.history_manager.fetchBarsForSpecs(self.current_contract, start_date, end_date, self.bar_combobox.currentText())\n   68:         self.history_manager.historicalDF.sort_index(inplace=True)\n   70:         self.history_manager.historicalDF.to_csv(file_name)\n\n~/Dropbox/pythonProjects/IB_apps/apps/listManaging/listManager.py:\n   55:         self.buffered_manager.history_manager.api_updater.connect(self.apiUpdate)\n   56:         self.buffered_manager.history_manager.mostRecentFirst = True\n\n~/Dropbox/pythonProjects/IB_apps/apps/movers/moversLists.py:\n   62:     def __init__(self, history_manager, processor_thread):\n   69:         history_manager.api_updater.connect(self.apiUpdate, Qt.QueuedConnection)\n   70:         self.setupProcessor(history_manager, processor_thread)\n   80:     def setupProcessor(self, history_manager, processor_thread):\n   81:         self.data_processor = MoversProcessor(history_manager, DT_BAR_TYPES, self.stock_list) #, self.index_list)\n  352:                 #     # self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  353:                 #     #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/polygonDownload/dataDownloader.py:\n  241:         requests = self.history_manager.request_buffer\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TickerProcessor.py:\n   31:     def __init__(self, history_manager):\n   34:         self.history_manager = history_manager\n   35:         self.buffered_manager = LiveDataManager(history_manager)\n   42:         self.price_request_signal.connect(self.history_manager.requestMarketData, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n   61:     def __init__(self, order_manager, history_manager, symbol_manager):\n   65:         self.history_manager = history_manager\n   68:         self.data_buffers = history_manager.getDataBuffer()\n   69:         self.history_manager.latest_price_signal.connect(self.priceUpdate)\n   70:         self.history_manager.mostRecentFirst = True\n   77:         self.prepTickerProcessor(history_manager)\n  135:     def prepTickerProcessor(self, history_manager):\n  138:         self.data_processor = LiveTickerProcessor(history_manager)\n  562:         self.history_manager.finished.emit()\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/BufferedManager.py:\n   49:     def __init__(self, history_manager, name=\"BufferedManager\"):\n   53:         self.history_manager = history_manager\n   54:         self.data_buffers = history_manager.getDataBuffer()\n   56:         self.history_manager.addNewListener(self, self.apiUpdate)\n   70:         print(self.history_manager)\n   71:         self.reset_signal.connect(self.history_manager.cancelActiveRequests, Qt.QueuedConnection)\n   72:         self.create_request_signal.connect(self.history_manager.createRequestsForContract, Qt.QueuedConnection)\n   73:         self.request_update_signal.connect(self.history_manager.requestUpdates, Qt.QueuedConnection)\n   74:         self.group_request_signal.connect(self.history_manager.groupCurrentRequests, Qt.QueuedConnection)\n   75:         self.execute_request_signal.connect(self.history_manager.iterateHistoryRequests, Qt.QueuedConnection)\n  120:         self.history_manager.cleanup_done_signal.connect(lambda: self.fetchLatestStockData(bar_types, True), Qt.QueuedConnection)\n  128:         if needs_disconnect: self.history_manager.cleanup_done_signal.disconnect()\n  130:         self.history_manager.process_owner = self\n  147:     #     self.history_manager.process_owner = self\n  219:         if needs_disconnect: self.history_manager.cleanup_done_signal.disconnect()\n  297:         if uid in self.history_manager.earliest_date_by_uid:\n  298:             earliest_date = self.history_manager.earliest_date_by_uid[uid]\n  354:         if self.history_manager.is_updating:\n  355:             print(\"We trigger a reset in history_manager\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonBufferedManager.py:\n   67:         if needs_disconnect: self.history_manager.cleanup_done_signal.disconnect()\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/LiveBufferedManager.py:\n   41:     def __init__(self, history_manager):\n   43:         self.history_manager = history_manager\n   44:         self.data_buffers = history_manager.getDataBuffer()\n   46:         self.history_manager.addNewListener(self, self.apiUpdate)\n   55:         self.stop_tracking_signal.connect(self.history_manager.stopTracking, Qt.QueuedConnection)\n   56:         self.create_request_signal.connect(self.history_manager.createRequestsForContract, Qt.QueuedConnection)\n   57:         self.request_update_signal.connect(self.history_manager.requestUpdates, Qt.QueuedConnection)\n   58:         self.group_request_signal.connect(self.history_manager.groupCurrentRequests, Qt.QueuedConnection)\n   59:         self.execute_request_signal.connect(self.history_manager.iterateHistoryRequests, Qt.QueuedConnection)\n  155:         if self.history_manager.is_updating:\n  156:             print(\"We trigger a reset in history_manager\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/SpecBufferedManager.py:\n   66:         self.history_manager.process_owner = self       \n  114:         if self.history_manager.is_updating:\n\n127 matches across 19 files\n\n\nSearching 142 files for \"er_app = AutoTraderManager(history_manager\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/appLauncher.py:\n  195:         trader_app = AutoTraderManager(history_manager, order_manager, indicator_processor, QThread())\n\n1 match in 1 file\n\n\nSearching 142 files for \"ComparisonDataWrapper.updatePrimaryGraphData\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/ComparisonDataWrapper.py:\n   87:         print(f\"ComparisonDataWrapper.updatePrimaryGraphData {data_dict}\")\n\n1 match in 1 file\n\n\nSearching 142 files for \"ComparisonProcessor.recalculateGraphLine\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/ComparisonProcessor.py:\n  180:         print(f\"ComparisonProcessor.recalculateGraphLines {uids} {type(uids)} {check_list}\")\n\n1 match in 1 file\n\n\nSearching 142 files for \"class Live\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   27: class LiveBufferedManager(QObject):\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TickerProcessor.py:\n   21: class LiveTickerProcessor(QObject):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/LiveBufferedManager.py:\n   26: class LiveDataManager(QObject):\n\n3 matches across 3 files\n\n\nSearching 142 files for \"def makeRequest\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  198:     def makeRequest(self, request):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  205:     def makeRequest(self, request):\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/SpecBufferedManager.py:\n   69:     def makeRequestList(self, bar_type, start_date, end_date):\n\n3 matches across 3 files\n\n\nSearching 142 files for \"ContractDe\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  255:         elif req_type == 'reqContractDetails':\n  256:             self.reqContractDetails(request['req_id'], request['contract'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  262:         elif req_type == 'reqContractDetails':\n  263:             self.reqContractDetails(request['req_id'], request['contract'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/SymbolManager.py:\n   58:     def requestContractDetails(self, symbol_name):\n   63:         self.makeRequest({'type': 'reqContractDetails', 'req_id': Constants.SYMBOL_SEARCH_REQID, 'contract': contract})\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n  319:     @pyqtSlot(ContractDetails)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/OptionManagement/OptionChainManager.py:\n  319:             request['type'] = 'reqContractDetails'\n\n~/Dropbox/pythonProjects/IB_apps/generalFunctionality/SymbolFinderImpl.py:\n   47:         self.symbol_manager.requestContractDetails(symbol_name)\n\n9 matches across 6 files\n\n\nSearching 142 files for \"class De\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataStructures.py:\n   17: class DetailObject:\n\n1 match in 1 file\n\n\nSearching 142 files for \"DetailObject\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   18: from dataHandling.DataStructures import DetailObject\n   41:     create_request_signal = pyqtSignal(DetailObject, datetime, datetime, str)\n   45:     real_time_request = pyqtSignal(DetailObject)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n  188:         DetailObject\n\n~/Dropbox/pythonProjects/IB_apps/apps/listManaging/listManager.py:\n   31: from dataHandling.DataStructures import DetailObject\n   40:     fetchUnderlyingPrice = pyqtSignal(DetailObject, bool)\n  129:             contract_details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=next_uid, currency=stock_inf['currency'])\n\n~/Dropbox/pythonProjects/IB_apps/apps/optionPositions/optionsPositionListing.py:\n   32: from dataHandling.DataStructures import DetailObject\n   44:     price_signal_request = pyqtSignal(DetailObject)\n   79:         self.price_signal_request.emit(DetailObject(symbol=selected_instr))\n\n~/Dropbox/pythonProjects/IB_apps/apps/optionVisualization/optionsVisualization.py:\n   28: from dataHandling.DataStructures import DetailObject\n   53:     make_selection_signal = pyqtSignal(DetailObject)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TickerProcessor.py:\n   18: from dataHandling.DataStructures import DetailObject\n   25:     price_request_signal = pyqtSignal(DetailObject)\n   66:         details = DetailObject(symbol=self.ticker_inf[1][Constants.SYMBOL], exchange=self.ticker_inf[1]['exchange'], numeric_id=self.ticker_inf[0], currency=self.ticker_inf[1]['currency'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py:\n   19: from dataHandling.DataStructures import DetailObject\n   95:     @pyqtSlot(DetailObject)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/DataStructures.py:\n   17: class DetailObject:\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   28: from dataHandling.DataStructures import DetailObject\n   43:     contract_details_signal = pyqtSignal(DetailObject)\n  177:             detailObject = DetailObject(symbol=contract.symbol, exchange=exchange, long_name=contract_details.longName, numeric_id=contract.conId, currency=contract.currency)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n   20: from .DataStructures import DetailObject\n   25: from dataHandling.DataStructures import DetailObject\n   41: from dataHandling.DataStructures import DetailObject\n   83:     @pyqtSlot(DetailObject)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/SymbolManager.py:\n   20: from .DataStructures import DetailObject\n   46:         detailObject = DetailObject(symbol=contract.symbol, exchange=exchange, long_name=contract_details.longName, numeric_id=contract.conId, currency=contract.currency)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/BufferedManager.py:\n   18: from dataHandling.DataStructures import DetailObject\n   43:     create_request_signal = pyqtSignal(DetailObject, datetime, datetime, str)\n  196:         details = DetailObject(symbol=value[Constants.SYMBOL], exchange=value['exchange'], numeric_id=uid)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonBufferedManager.py:\n   20: from dataHandling.DataStructures import DetailObject\n   44:         details = DetailObject(symbol=value[Constants.SYMBOL], exchange=value['exchange'], numeric_id=uid)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonDataManager.py:\n   25: from dataHandling.DataStructures import DetailObject\n  258:             details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=uid)\n  284:             details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=uid)\n  404:     @pyqtSlot(DetailObject, datetime, datetime, str)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n   43: from dataHandling.DataStructures import DetailObject\n  218:     @pyqtSlot(DetailObject, datetime, datetime, str)\n  308:             details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=uid)\n  319:     @pyqtSlot(DetailObject)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagementOld.py:\n   32: from dataHandling.DataStructures import DetailObject\n  208:     @pyqtSlot(DetailObject, datetime, datetime, str)\n  298:             details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=uid)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/LiveBufferedManager.py:\n   18: from dataHandling.DataStructures import DetailObject\n   35:     create_request_signal = pyqtSignal(DetailObject, datetime, datetime, str)\n  122:         details = DetailObject(symbol=stock_inf[Constants.SYMBOL], exchange=stock_inf['exchange'], numeric_id=uid)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/SpecBufferedManager.py:\n   18: from dataHandling.DataStructures import DetailObject\n   39:     create_request_signal = pyqtSignal(DetailObject, datetime, datetime, str)\n   72:             details = DetailObject(symbol=value[Constants.SYMBOL], exchange=value['exchange'], numeric_id=uid)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/OptionManagement/OptionChainManager.py:\n   22: from dataHandling.DataStructures import DetailObject\n   98:     @pyqtSlot(DetailObject)\n   99:     @pyqtSlot(DetailObject, bool)\n\n52 matches across 19 files\n\n\nSearching 142 files for \"turnOnRealtimeBarsFor\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   75:         self.real_time_request.connect(self.data_manager.turnOnRealtimeBarsFor, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n  319:     def turnOnRealtimeBarsFor(self, contract_details):\n\n2 matches across 2 files\n\n\nSearching 142 files for \"lf.cancel_real_time_request.connect(self.data_manager.turnOffRea\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py:\n   76:         self.cancel_real_time_request.connect(self.data_manager.turnOffRealtimeBarsFor, Qt.QueuedConnection)\n\n1 match in 1 file\n\n\nSearching 142 files for \"q_type = request['type']\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  221:         req_type = request['type']\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  228:         req_type = request['type']\n\n2 matches across 2 files\n\n\nSearching 142 files for \"f.priority_signal.emit(uid, True)\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerPrevious.py:\n  192:         self.priority_signal.emit(uid, True)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n  221:         self.priority_signal.emit(uid, True)\n\n2 matches across 2 files\n\n\nSearching 142 files for \"order_update_signal = \" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   39:     order_update_signal = pyqtSignal(int, dict)\n\n1 match in 1 file\n\n\nSearching 142 files for \"placeOrder\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n   86:         self.trade_place_signal.connect(self.order_manager.placeOrder)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/comparisonLists.py:\n  383:                 self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  384:                 #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/movers/moversLists.py:\n  352:                 #     # self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  353:                 #     #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n  152:         self.place_complex_signal.connect(self.order_manager.placeOrder, Qt.QueuedConnection)\n  354:     def placeOrder(self):\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TradingWindow.py:\n  130:         self.submit_button.clicked.connect(self.placeOrder)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  248:         elif req_type == 'placeOrder':\n  249:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  256:         elif req_type == 'placeOrder':\n  257:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n  359:             request['type'] = 'placeOrder'\n  449:     def placeOrder(self, contract, action, count, limit_price, exit_dict):\n  573:             request['type'] = 'placeOrder'\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  234:             request['type'] = 'placeOrder'\n  324:     def placeOrder(self, contract, action, count, limit_price, exit_dict):\n  448:             request['type'] = 'placeOrder'\n\n18 matches across 8 files\n\n\nSearching 142 files for \"import OrderManager\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   21: from dataHandling.TradeManagement.OrderManagement import OrderManager\n\n1 match in 1 file\n\n\nSearching 142 files for \"from OrderM\" (case sensitive)\n\n0 matches\n\nSearching 142 files for \"from Order\" (case sensitive)\n\n0 matches\n\nSearching 142 files for \"import Order\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   21: from dataHandling.IBConnectivityNew import OrderManager\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/comparisonLists.py:\n   36: from uiComps.customWidgets.OrderDialog import OrderDialog\n\n~/Dropbox/pythonProjects/IB_apps/apps/positionManaging/positionManager.py:\n   28: from .OrderDataModel import OrderDataModel, StairDataModel, SpinBoxDelegate, ButtonDelegate, CheckBoxDelegate\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n   28: from .OrderDataModel import OrderDataModel, StairDataModel, SpinBoxDelegate, ButtonDelegate, CheckBoxDelegate\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n   20: from ibapi.order import Order\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n   33: from ibapi.order import Order\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py:\n   35: from ibapi.order import Order\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n   22: from ibapi.order import Order\n\n~/Dropbox/pythonProjects/IB_apps/uiComps/customWidgets/OrderDialog.py:\n   19: from ibapi.order import Order\n\n9 matches across 9 files\n\n\nSearching 142 files for \"der_manager = OrderManager()\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n  156:             order_manager = OrderManager()\n\n1 match in 1 file\n\n\nSearching 142 files for \".order_manager.ib_interface.order_update_signal.connect(self.orderUpdate, Qt.Queu\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n   81:         self.order_manager.ib_interface.order_update_signal.connect(self.orderUpdate, Qt.QueuedConnection)\n\n1 match in 1 file\n\n\nSearching 142 files for \".submit_button.clicked.connect(self.placeComboOrder)\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TradingWindow.py:\n  130:         self.submit_button.clicked.connect(self.placeComboOrder)\n\n1 match in 1 file\n\n\nSearching 142 files for \"lds.append(make_field( contract.conId))\" (case sensitive)\n\n0 matches\n\nSearching 142 files for \"placeOrder\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/comparisonLists.py:\n  383:                 self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  384:                 #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/movers/moversLists.py:\n  352:                 #     # self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  353:                 #     #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n  152:         self.place_complex_signal.connect(self.order_manager.placeOrder, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  248:         elif req_type == 'placeOrder':\n  249:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  255:         elif req_type == 'placeOrder':\n  256:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n  358:             request['type'] = 'placeOrder'\n  572:             request['type'] = 'placeOrder'\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  234:             request['type'] = 'placeOrder'\n  324:     def placeOrder(self, contract, action, count, limit_price, exit_dict):\n  448:             request['type'] = 'placeOrder'\n\n14 matches across 6 files\n\n\nSearching 142 files for \"def placeOrder\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  324:     def placeOrder(self, contract, action, count, limit_price, exit_dict):\n\n1 match in 1 file\n\n\nSearching 142 files for \"'placeOrder'\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  248:         elif req_type == 'placeOrder':\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  255:         elif req_type == 'placeOrder':\n  358:             request['type'] = 'placeOrder'\n  572:             request['type'] = 'placeOrder'\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  234:             request['type'] = 'placeOrder'\n  448:             request['type'] = 'placeOrder'\n\n6 matches across 3 files\n\n\nSearching 142 files for \"placeCom\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py:\n   86:         self.trade_place_signal.connect(self.order_manager.placeComboOrder)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n  354:     def placeComboOrder(self):\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TradingWindow.py:\n  130:         self.submit_button.clicked.connect(self.placeComboOrder)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  452:     def placeComboOrder(self, contract, action, count, limit_price, exit_dict):\n\n4 matches across 4 files\n\n\nSearching 142 files for \"OrderMa\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/appLauncher.py:\n  134:         order_manager = self.getOrderManager()\n  156:         order_manager = self.getOrderManager()\n  194:         order_manager = self.getOrderManager() \n\n~/Dropbox/pythonProjects/IB_apps/IBConnector.py:\n   21: from dataHandling.IBConnectivityNew import OrderManager\n  152:     def getOrderManager(self, identifier='general_order_manager'):\n  158:                 order_manager = OrderManager(self.local_address, int(self.trading_socket), 0)\n  160:                 order_manager = OrderManager(self.local_address, int(self.trading_socket), self.next_id)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  311: from dataHandling.TradeManagement.OrderManagement import StairManager, OpenOrderBuffer\n  313: class OrderManager(IBConnectivity, QObject):\n  323:     def __init__(self, *args, name=\"OrderManager\", stair_manager_on=True):\n  324:         print(\"OrderManager.__init__\")\n  391:         # print(\"OrderManager.getNextOrderIDs\")\n  393:         # print(\"OrderManager.getNextOrderIDs 1\")\n  397:         # print(\"OrderManager.getNextOrderIDs 4\")\n  444:         # print(\"OrderManager.cancelAllOrders\")\n  453:         print(\"OrderManager.placeComboOrder\")\n  553:             # print(f\"OrderManager.killStairTrade {current_ids}\")\n  561:         # print(f\"OrderManager.orderEdit {order_id} {properties}\")\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  188: class OrderManagerOld(DataManager):\n  198:         super().__init__(callback, name=\"OrderManager\")\n  263:         # print(\"OrderManager.getNextOrderIDs\")\n  265:         # print(\"OrderManager.getNextOrderIDs 1\")\n  269:         # print(\"OrderManager.getNextOrderIDs 4\")\n  316:         # print(\"OrderManager.cancelAllOrders\")\n  325:         print(\"OrderManagerOld.placeOrder\")\n  424:             # print(f\"OrderManager.killStairTrade {current_ids}\")\n  432:         # print(f\"OrderManager.orderEdit {order_id} {properties}\")\n  591:         print('OrderManager.getOrderCount')\n  691:         # print(\"OrderManager.adjustStairTradeIfNeeded\")\n  812:         # print(\"OrderManager.getProfitProps\")\n\n30 matches across 4 files\n\n\nSearching 142 files for \"placeOrder\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/apps/comparisons/comparisonLists.py:\n  383:                 self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  384:                 #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/movers/moversLists.py:\n  352:                 #     # self.data_processor.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n  353:                 #     #self.buffered_manager.history_manager.ib_interface.placeOrder(order.orderId, mycontract, order)\n\n~/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py:\n  152:         self.place_complex_signal.connect(self.order_manager.placeOrder, Qt.QueuedConnection)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py:\n  248:         elif req_type == 'placeOrder':\n  249:             print(\"IBConnectivityOld.placeOrder\")\n  250:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  255:         elif req_type == 'placeOrder':\n  256:             print(\"IBConnectivtyNew.placeOrder\")\n  260:             self.placeOrder(request['order_id'], request['contract'], request['order'])\n  363:             request['type'] = 'placeOrder'\n  578:             request['type'] = 'placeOrder'\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  234:             request['type'] = 'placeOrder'\n  324:     def placeOrder(self, contract, action, count, limit_price, exit_dict):\n  325:         print(\"OrderManagerOld.placeOrder\")\n  448:             request['type'] = 'placeOrder'\n\n17 matches across 6 files\n\n\nSearching 142 files for \"t_order_id = self.ib_interface.next_order_ID\" (case sensitive)\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py:\n  391:         next_order_id = self.ib_interface.next_order_ID\n\n~/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py:\n  262:         next_order_id = self.ib_interface.next_order_ID\n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 46889,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "IBConnector.py",
			"settings":
			{
				"buffer_size": 8329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "IBCon"
					},
					"BgAAAOADAAAAAAAA4QMAAAAAAAAAAAAA4QMAAAAAAADhAwAAAAAAAA8AAABPcmRlck1hbmFnZW1lbnThAwAAAAAAAOIDAAAAAAAAAAAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAADkAwAAAAAAAOUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wMAAAAAAADgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert_completion",
					{
						"completion": "IBConnectivity",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "IBConnectivity"
					},
					"AgAAAOADAAAAAAAA4AMAAAAAAAAFAAAASUJDb27gAwAAAAAAAO4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gMAAAAAAADuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAO4DAAAAAAAA7gMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA7wMAAAAAAADvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "New"
					},
					"AwAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA7wMAAAAAAADwAwAAAAAAAAAAAADwAwAAAAAAAPEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gMAAAAAAADuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAANADAAAAAAAA0AMAAAAAAAAQAAAAVHJhZGVNYW5hZ2VtZW50Lg",
					"AQAAAAAAAAABAAAA4AMAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"cut",
					null,
					"AQAAAHYZAAAAAAAAdhkAAAAAAAAeAAAAb3JkZXJfbWFuYWdlciA9IE9yZGVyTWFuYWdlcigp",
					"AQAAAAAAAAABAAAAdhkAAAAAAACUGQAAAAAAAP///////+9/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKwZAAAAAAAArRkAAAAAAAAAAAAArRkAAAAAAAC5GQAAAAAAAAAAAAC5GQAAAAAAAL0ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArBkAAAAAAACsGQAAAAAAAP///////+9/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAL0ZAAAAAAAA2xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRkAAAAAAAC9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"cut",
					null,
					"AQAAAAgaAAAAAAAACBoAAAAAAAA5AAAAc2VsZi5sb2NhbF9hZGRyZXNzLCBpbnQoc2VsZi50cmFkaW5nX3NvY2tldCksIGNsaWVudF9pZD0w",
					"AQAAAAAAAAABAAAACBoAAAAAAABBGgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAANoZAAAAAAAAExoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					2,
					"left_delete",
					null,
					"AgAAABUaAAAAAAAAFRoAAAAAAAAtAAAAICAgICAgICAgICAgICAgIG9yZGVyX21hbmFnZXIuc2V0UGFyYW1ldGVycygpFBoAAAAAAAAUGgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAQhoAAAAAAAAVGgAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACYaAAAAAAAAJxoAAAAAAAAAAAAAJxoAAAAAAAAzGgAAAAAAAAAAAAAzGgAAAAAAADcaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhoAAAAAAAAmGgAAAAAAAAAAAAAAwIlA"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAADcaAAAAAAAAjhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxoAAAAAAAA3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"cut",
					null,
					"AQAAAPMaAAAAAAAA8xoAAAAAAAAMAAAAc2VsZi5uZXh0X2lk",
					"AQAAAAAAAAABAAAA/xoAAAAAAADzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAIwaAAAAAAAAjBoAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAjRoAAAAAAACNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAIwaAAAAAAAAmBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBoAAAAAAACMGgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					2,
					"left_delete",
					null,
					"AgAAAJoaAAAAAAAAmhoAAAAAAABlAAAAICAgICAgICAgICAgICAgIG9yZGVyX21hbmFnZXIuc2V0UGFyYW1ldGVycyhzZWxmLmxvY2FsX2FkZHJlc3MsIGludChzZWxmLnRyYWRpbmdfc29ja2V0KSwgY2xpZW50X2lkPSmZGgAAAAAAAJkaAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA/xoAAAAAAACaGgAAAAAAAAAAAAAAAAAA"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACkbAAAAAAAAKhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRsAAAAAAAApGwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " run"
					},
					"BAAAACobAAAAAAAAKxsAAAAAAAAAAAAAKxsAAAAAAAAsGwAAAAAAAAAAAAAsGwAAAAAAAC0bAAAAAAAAAAAAAC0bAAAAAAAALhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhsAAAAAAAAqGwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert_completion",
					{
						"completion": "run_function",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "run_function"
					},
					"AgAAACsbAAAAAAAAKxsAAAAAAAADAAAAcnVuKxsAAAAAAAA3GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhsAAAAAAAAuGwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "=order"
					},
					"BgAAADcbAAAAAAAAOBsAAAAAAAAAAAAAOBsAAAAAAAA5GwAAAAAAAAAAAAA5GwAAAAAAADobAAAAAAAAAAAAADobAAAAAAAAOxsAAAAAAAAAAAAAOxsAAAAAAAA8GwAAAAAAAAAAAAA8GwAAAAAAAD0bAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxsAAAAAAAA3GwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert_completion",
					{
						"completion": "order_manager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "order_manager"
					},
					"AgAAADgbAAAAAAAAOBsAAAAAAAAFAAAAb3JkZXI4GwAAAAAAAEUbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRsAAAAAAAA9GwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ".st"
					},
					"AwAAAEUbAAAAAAAARhsAAAAAAAAAAAAARhsAAAAAAABHGwAAAAAAAAAAAABHGwAAAAAAAEgbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRsAAAAAAABFGwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_completion",
					{
						"completion": "startConnection",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "startConnection"
					},
					"AgAAAEYbAAAAAAAARhsAAAAAAAACAAAAc3RGGwAAAAAAAFUbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBsAAAAAAABIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAIIaAAAAAAAAghoAAAAAAAAKAAAAY2xpZW50X2lkPQ",
					"AQAAAAAAAAABAAAAjBoAAAAAAACCGgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAAgaAAAAAAAACBoAAAAAAAAKAAAAY2xpZW50X2lkPQ",
					"AQAAAAAAAAABAAAACBoAAAAAAAASGgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "Trade"
					},
					"BgAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADRAwAAAAAAABEAAABJQkNvbm5lY3Rpdml0eU5ld9EDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAADTAwAAAAAAANQDAAAAAAAAAAAAANQDAAAAAAAA1QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AMAAAAAAADhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert_completion",
					{
						"completion": "TradeManagement",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "TradeManagement"
					},
					"AgAAANADAAAAAAAA0AMAAAAAAAAFAAAAVHJhZGXQAwAAAAAAAN8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ".Or"
					},
					"AwAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wMAAAAAAADfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "derMan"
					},
					"BgAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAADkAwAAAAAAAOUDAAAAAAAAAAAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA5gMAAAAAAADnAwAAAAAAAAAAAADnAwAAAAAAAOgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "agement"
					},
					"BwAAAOgDAAAAAAAA6QMAAAAAAAAAAAAA6QMAAAAAAADqAwAAAAAAAAAAAADqAwAAAAAAAOsDAAAAAAAAAAAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA7AMAAAAAAADtAwAAAAAAAAAAAADtAwAAAAAAAO4DAAAAAAAAAAAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AMAAAAAAADoAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "apps/tradeMaker/TradingWindow.py",
			"settings":
			{
				"buffer_size": 7168,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "Combo"
					},
					"BQAAAG4TAAAAAAAAbxMAAAAAAAAAAAAAbxMAAAAAAABwEwAAAAAAAAAAAABwEwAAAAAAAHETAAAAAAAAAAAAAHETAAAAAAAAchMAAAAAAAAAAAAAchMAAAAAAABzEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhMAAAAAAABuEwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "apps/tradeMaker/tradeMaker.py",
			"settings":
			{
				"buffer_size": 24606,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "Combo"
					},
					"BQAAAJc8AAAAAAAAmDwAAAAAAAAAAAAAmDwAAAAAAACZPAAAAAAAAAAAAACZPAAAAAAAAJo8AAAAAAAAAAAAAJo8AAAAAAAAmzwAAAAAAAAAAAAAmzwAAAAAAACcPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlzwAAAAAAACXPAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "Cbo"
					},
					"AwAAAMgbAAAAAAAAyRsAAAAAAAAAAAAAyRsAAAAAAADKGwAAAAAAAAAAAADKGwAAAAAAAMsbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBsAAAAAAADIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAAMobAAAAAAAAyhsAAAAAAAABAAAAb8kbAAAAAAAAyRsAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAyxsAAAAAAADLGwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ombo"
					},
					"BAAAAMkbAAAAAAAAyhsAAAAAAAAAAAAAyhsAAAAAAADLGwAAAAAAAAAAAADLGwAAAAAAAMwbAAAAAAAAAAAAAMwbAAAAAAAAzRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRsAAAAAAADJGwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "dataHandling/IBConnectivity.py",
			"settings":
			{
				"buffer_size": 18788,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAACUkAAAAAAAAJiQAAAAAAAAAAAAAJiQAAAAAAAAuJAAAAAAAAAAAAAAuJAAAAAAAADIkAAAAAAAAAAAAADIkAAAAAAAAMyQAAAAAAAAAAAAAMyQAAAAAAAA0JAAAAAAAAAAAAAA0JAAAAAAAADUkAAAAAAAAAAAAADUkAAAAAAAANiQAAAAAAAAAAAAANiQAAAAAAAA3JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJSQAAAAAAAAlJAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADckAAAAAAAAOSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANyQAAAAAAAA3JAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADgkAAAAAAAAOiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOCQAAAAAAAA4JAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "IBC"
					},
					"AwAAADkkAAAAAAAAOiQAAAAAAAAAAAAAOiQAAAAAAAA7JAAAAAAAAAAAAAA7JAAAAAAAADwkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOSQAAAAAAAA5JAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_completion",
					{
						"completion": "IBConnectivity",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "IBConnectivity"
					},
					"AgAAADkkAAAAAAAAOSQAAAAAAAADAAAASUJDOSQAAAAAAABHJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPCQAAAAAAAA8JAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "Old.place"
					},
					"CQAAAEckAAAAAAAASCQAAAAAAAAAAAAASCQAAAAAAABJJAAAAAAAAAAAAABJJAAAAAAAAEokAAAAAAAAAAAAAEokAAAAAAAASyQAAAAAAAAAAAAASyQAAAAAAABMJAAAAAAAAAAAAABMJAAAAAAAAE0kAAAAAAAAAAAAAE0kAAAAAAAATiQAAAAAAAAAAAAATiQAAAAAAABPJAAAAAAAAAAAAABPJAAAAAAAAFAkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARyQAAAAAAABHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_completion",
					{
						"completion": "placeOrder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "placeOrder"
					},
					"AgAAAEskAAAAAAAASyQAAAAAAAAFAAAAcGxhY2VLJAAAAAAAAFUkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUCQAAAAAAABQJAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "dataHandling/IBConnectivityNew.py",
			"settings":
			{
				"buffer_size": 11536,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAL8iAAAAAAAAwCIAAAAAAAAAAAAAwCIAAAAAAADIIgAAAAAAAAAAAADIIgAAAAAAAMwiAAAAAAAAAAAAAMwiAAAAAAAAzSIAAAAAAAAAAAAAzSIAAAAAAADOIgAAAAAAAAAAAADOIgAAAAAAAM8iAAAAAAAAAAAAAM8iAAAAAAAA0CIAAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvyIAAAAAAAC/IgAAAAAAAP///////+9/"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANEiAAAAAAAA0yIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SIAAAAAAADRIgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANIiAAAAAAAA1CIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iIAAAAAAADSIgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "We"
					},
					"AgAAANMiAAAAAAAA1CIAAAAAAAAAAAAA1CIAAAAAAADVIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yIAAAAAAADTIgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " execute"
					},
					"CAAAANUiAAAAAAAA1iIAAAAAAAAAAAAA1iIAAAAAAADXIgAAAAAAAAAAAADXIgAAAAAAANgiAAAAAAAAAAAAANgiAAAAAAAA2SIAAAAAAAAAAAAA2SIAAAAAAADaIgAAAAAAAAAAAADaIgAAAAAAANsiAAAAAAAAAAAAANsiAAAAAAAA3CIAAAAAAAAAAAAA3CIAAAAAAADdIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SIAAAAAAADVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAN0iAAAAAAAA3iIAAAAAAAAAAAAA3iIAAAAAAADfIgAAAAAAAAAAAADfIgAAAAAAAOAiAAAAAAAAAAAAAOAiAAAAAAAA4SIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SIAAAAAAADdIgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " reqR"
					},
					"BQAAAOEiAAAAAAAA4iIAAAAAAAAAAAAA4iIAAAAAAADjIgAAAAAAAAAAAADjIgAAAAAAAOQiAAAAAAAAAAAAAOQiAAAAAAAA5SIAAAAAAAAAAAAA5SIAAAAAAADmIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4SIAAAAAAADhIgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "ealTime"
					},
					"BwAAAOYiAAAAAAAA5yIAAAAAAAAAAAAA5yIAAAAAAADoIgAAAAAAAAAAAADoIgAAAAAAAOkiAAAAAAAAAAAAAOkiAAAAAAAA6iIAAAAAAAAAAAAA6iIAAAAAAADrIgAAAAAAAAAAAADrIgAAAAAAAOwiAAAAAAAAAAAAAOwiAAAAAAAA7SIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5iIAAAAAAADmIgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert_completion",
					{
						"completion": "reqRealTimeBars",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reqRealTimeBars"
					},
					"AgAAAOIiAAAAAAAA4iIAAAAAAAALAAAAcmVxUmVhbFRpbWXiIgAAAAAAAPEiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7SIAAAAAAADtIgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "IBConnectiv"
					},
					"DAAAANMiAAAAAAAA1CIAAAAAAAAAAAAA1CIAAAAAAADUIgAAAAAAAA8AAABXZSBleGVjdXRlIHRoZSDUIgAAAAAAANUiAAAAAAAAAAAAANUiAAAAAAAA1iIAAAAAAAAAAAAA1iIAAAAAAADXIgAAAAAAAAAAAADXIgAAAAAAANgiAAAAAAAAAAAAANgiAAAAAAAA2SIAAAAAAAAAAAAA2SIAAAAAAADaIgAAAAAAAAAAAADaIgAAAAAAANsiAAAAAAAAAAAAANsiAAAAAAAA3CIAAAAAAAAAAAAA3CIAAAAAAADdIgAAAAAAAAAAAADdIgAAAAAAAN4iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4iIAAAAAAADTIgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "tyNew."
					},
					"BgAAAN4iAAAAAAAA3yIAAAAAAAAAAAAA3yIAAAAAAADgIgAAAAAAAAAAAADgIgAAAAAAAOEiAAAAAAAAAAAAAOEiAAAAAAAA4iIAAAAAAAAAAAAA4iIAAAAAAADjIgAAAAAAAAAAAADjIgAAAAAAAOQiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3iIAAAAAAADeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "False"
					},
					"BgAAAEwjAAAAAAAATSMAAAAAAAAAAAAATSMAAAAAAABNIwAAAAAAAAQAAABUcnVlTSMAAAAAAABOIwAAAAAAAAAAAABOIwAAAAAAAE8jAAAAAAAAAAAAAE8jAAAAAAAAUCMAAAAAAAAAAAAAUCMAAAAAAABRIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATCMAAAAAAABQIwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"paste",
					null,
					"AgAAAEMjAAAAAAAASyMAAAAAAAAAAAAASyMAAAAAAABLIwAAAAAAAAYAAABUUkFERVM",
					"AQAAAAAAAAABAAAAQyMAAAAAAABJIwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAEIjAAAAAAAAQiMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAQyMAAAAAAABDIwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAEIjAAAAAAAAQyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiMAAAAAAABCIwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAEsjAAAAAAAASyMAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAATCMAAAAAAABMIwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAEsjAAAAAAAATCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASyMAAAAAAABLIwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJEsAAAAAAAAkiwAAAAAAAAAAAAAkiwAAAAAAACTLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkSwAAAAAAACRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"paste",
					null,
					"AQAAAJMsAAAAAAAAc1UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkywAAAAAAACTLAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"paste",
					null,
					"AgAAAIktAAAAAAAA3i0AAAAAAAAAAAAA3i0AAAAAAADeLQAAAAAAAC8AAABzdXBlcigpLl9faW5pdF9fKGNhbGxiYWNrLCBuYW1lPSJPcmRlck1hbmFnZXIiKQ",
					"AQAAAAAAAAABAAAAiS0AAAAAAAC4LQAAAAAAAP///////+9/"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAFotAAAAAAAAWi0AAAAAAAAOAAAAY2FsbGJhY2s9Tm9uZSw",
					"AQAAAAAAAAABAAAAWi0AAAAAAABoLQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"paste",
					null,
					"AQAAAFotAAAAAAAAYS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWi0AAAAAAABaLQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAFotAAAAAAAAWi0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWy0AAAAAAABbLQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF8tAAAAAAAAYC0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXy0AAAAAAABfLQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAGAtAAAAAAAAYS0AAAAAAAAAAAAAYS0AAAAAAABiLQAAAAAAAAAAAABiLQAAAAAAAGMtAAAAAAAAAAAAAGMtAAAAAAAAZC0AAAAAAAAAAAAAZC0AAAAAAABlLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYC0AAAAAAABgLQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAGUtAAAAAAAAZi0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZS0AAAAAAABlLQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYtAAAAAAAAZy0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZi0AAAAAAABmLQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"left_delete",
					null,
					"AQAAAGYtAAAAAAAAZi0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZy0AAAAAAABnLQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGYtAAAAAAAAaC0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZi0AAAAAAABmLQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "Order"
					},
					"BQAAAGctAAAAAAAAaC0AAAAAAAAAAAAAaC0AAAAAAABpLQAAAAAAAAAAAABpLQAAAAAAAGotAAAAAAAAAAAAAGotAAAAAAAAay0AAAAAAAAAAAAAay0AAAAAAABsLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZy0AAAAAAABnLQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert_completion",
					{
						"completion": "OrderManager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OrderManager"
					},
					"AgAAAGctAAAAAAAAZy0AAAAAAAAFAAAAT3JkZXJnLQAAAAAAAHMtAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbC0AAAAAAABsLQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BQAAALstAAAAAAAAvC0AAAAAAAAAAAAAvC0AAAAAAAC8LQAAAAAAAAgAAAAqKmt3YXJnc7wtAAAAAAAAvS0AAAAAAAAAAAAAvS0AAAAAAAC+LQAAAAAAAAAAAAC+LQAAAAAAAL8tAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuy0AAAAAAADDLQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "=name"
					},
					"BQAAAL8tAAAAAAAAwC0AAAAAAAAAAAAAwC0AAAAAAADBLQAAAAAAAAAAAADBLQAAAAAAAMItAAAAAAAAAAAAAMItAAAAAAAAwy0AAAAAAAAAAAAAwy0AAAAAAADELQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvy0AAAAAAAC/LQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					2,
					"left_delete",
					null,
					"AgAAAKYvAAAAAAAApi8AAAAAAAAMAAAAaWJfaW50ZXJmYWNlpS8AAAAAAAClLwAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAApi8AAAAAAACyLwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"left_delete",
					null,
					"AQAAAJgwAAAAAAAAmDAAAAAAAAANAAAALmliX2ludGVyZmFjZQ",
					"AQAAAAAAAAABAAAAmDAAAAAAAAClMAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEtAAAAAAAAQi0AAAAAAAAAAAAAQi0AAAAAAABGLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQS0AAAAAAABBLQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"paste",
					null,
					"AQAAAEYtAAAAAAAAdS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARi0AAAAAAABGLQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"left_delete",
					null,
					"AQAAAEYtAAAAAAAARi0AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAASi0AAAAAAABKLQAAAAAAAAAAAAAAAFBA"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALY9AAAAAAAAuj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtj0AAAAAAAC2PQAAAAAAAAAAAAAAAAAA"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAMBVAAAAAAAAwVUAAAAAAAAAAAAAwVUAAAAAAADNVQAAAAAAAAAAAADNVQAAAAAAAM5VAAAAAAAAAAAAAM5VAAAAAAAA2lUAAAAAAAAAAAAAwVUAAAAAAADBVQAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAwFUAAAAAAADAVQAAAAAAAP///////+9/"
				],
				[
					140,
					2,
					"left_delete",
					null,
					"AgAAAMpVAAAAAAAAylUAAAAAAAAEAAAAICAgIMZVAAAAAAAAxlUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAzlUAAAAAAADOVQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"paste",
					null,
					"AQAAAMZVAAAAAAAApVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxlUAAAAAAADGVQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"unindent",
					null,
					"AQAAAMJVAAAAAAAAwlUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAwlUAAAAAAADCVQAAAAAAAAAAAAAAAAAA"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAMFVAAAAAAAAwlUAAAAAAAAAAAAAwlUAAAAAAADDVQAAAAAAAAAAAADDVQAAAAAAAMRVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwVUAAAAAAADBVQAAAAAAAAAAAAAAAAAA"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMJVAAAAAAAAw1UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwlUAAAAAAADCVQAAAAAAAAAAAAAAAAAA"
				],
				[
					148,
					1,
					"reindent",
					null,
					"AQAAAMNVAAAAAAAAz1UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw1UAAAAAAADDVQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAMtVAAAAAAAAy1UAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAz1UAAAAAAADPVQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "######"
					},
					"BgAAAMtVAAAAAAAAzFUAAAAAAAAAAAAAzFUAAAAAAADNVQAAAAAAAAAAAADNVQAAAAAAAM5VAAAAAAAAAAAAAM5VAAAAAAAAz1UAAAAAAAAAAAAAz1UAAAAAAADQVQAAAAAAAAAAAADQVQAAAAAAANFVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy1UAAAAAAADLVQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAAMdVAAAAAAAAx1UAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAy1UAAAAAAADLVQAAAAAAAAAAAAAAAFBA"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "TWS"
					},
					"AwAAAM1VAAAAAAAAzlUAAAAAAAAAAAAAzlUAAAAAAADPVQAAAAAAAAAAAADPVQAAAAAAANBVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzVUAAAAAAADNVQAAAAAAAP///////+9/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": " Cal"
					},
					"BAAAANBVAAAAAAAA0VUAAAAAAAAAAAAA0VUAAAAAAADSVQAAAAAAAAAAAADSVQAAAAAAANNVAAAAAAAAAAAAANNVAAAAAAAA1FUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0FUAAAAAAADQVQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "labk"
					},
					"BAAAANRVAAAAAAAA1VUAAAAAAAAAAAAA1VUAAAAAAADWVQAAAAAAAAAAAADWVQAAAAAAANdVAAAAAAAAAAAAANdVAAAAAAAA2FUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1FUAAAAAAADUVQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					3,
					"left_delete",
					null,
					"AwAAANdVAAAAAAAA11UAAAAAAAABAAAAa9ZVAAAAAAAA1lUAAAAAAAABAAAAYtVVAAAAAAAA1VUAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA2FUAAAAAAADYVQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "backs"
					},
					"BQAAANVVAAAAAAAA1lUAAAAAAAAAAAAA1lUAAAAAAADXVQAAAAAAAAAAAADXVQAAAAAAANhVAAAAAAAAAAAAANhVAAAAAAAA2VUAAAAAAAAAAAAA2VUAAAAAAADaVQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1VUAAAAAAADVVQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "make"
					},
					"BQAAAKFVAAAAAAAAolUAAAAAAAAAAAAAolUAAAAAAACiVQAAAAAAABYAAABpYl9yZXF1ZXN0X3NpZ25hbC5lbWl0olUAAAAAAACjVQAAAAAAAAAAAACjVQAAAAAAAKRVAAAAAAAAAAAAAKRVAAAAAAAApVUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoVUAAAAAAAC3VQAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert_completion",
					{
						"completion": "makeRequest",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "makeRequest"
					},
					"AgAAAKFVAAAAAAAAoVUAAAAAAAAEAAAAbWFrZaFVAAAAAAAArFUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApVUAAAAAAAClVQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"paste",
					null,
					"AgAAAOlRAAAAAAAA9FEAAAAAAAAAAAAA9FEAAAAAAAD0UQAAAAAAABYAAABpYl9yZXF1ZXN0X3NpZ25hbC5lbWl0",
					"AQAAAAAAAAABAAAA/1EAAAAAAADpUQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"paste",
					null,
					"AgAAAIU9AAAAAAAAkD0AAAAAAAAAAAAAkD0AAAAAAACQPQAAAAAAABEAAABpYl9yZXF1ZXN0X3NpZ25hbA",
					"AQAAAAAAAAABAAAAhT0AAAAAAACWPQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					2,
					"left_delete",
					null,
					"AgAAAKE8AAAAAAAAoTwAAAAAAAAMAAAAaWJfaW50ZXJmYWNloDwAAAAAAACgPAAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAAoTwAAAAAAACtPAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "make"
					},
					"BQAAADszAAAAAAAAPDMAAAAAAAAAAAAAPDMAAAAAAAA8MwAAAAAAABYAAABpYl9yZXF1ZXN0X3NpZ25hbC5lbWl0PDMAAAAAAAA9MwAAAAAAAAAAAAA9MwAAAAAAAD4zAAAAAAAAAAAAAD4zAAAAAAAAPzMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOzMAAAAAAABRMwAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert_completion",
					{
						"completion": "makeRequest",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "makeRequest"
					},
					"AgAAADszAAAAAAAAOzMAAAAAAAAEAAAAbWFrZTszAAAAAAAARjMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzMAAAAAAAA/MwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					2,
					"left_delete",
					null,
					"AgAAAFIwAAAAAAAAUjAAAAAAAAAMAAAAaWJfaW50ZXJmYWNlUTAAAAAAAABRMAAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAAUjAAAAAAAABeMAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "Combo"
					},
					"BQAAAPg9AAAAAAAA+T0AAAAAAAAAAAAA+T0AAAAAAAD6PQAAAAAAAAAAAAD6PQAAAAAAAPs9AAAAAAAAAAAAAPs9AAAAAAAA/D0AAAAAAAAAAAAA/D0AAAAAAAD9PQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+D0AAAAAAAD4PQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"left_delete",
					null,
					"AQAAAJAsAAAAAAAAkCwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAkSwAAAAAAACRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					2,
					"left_delete",
					null,
					"AgAAAKgDAAAAAAAAqAMAAAAAAAA2AAAAZnJvbSBkYXRhSGFuZGxpbmcuSUJDb25uZWN0aXZpdHkgaW1wb3J0IElCQ29ubmVjdGl2aXR5pwMAAAAAAACnAwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAqAMAAAAAAADeAwAAAAAAAP///////+9/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFosAAAAAAAAWywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWiwAAAAAAABaLAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"paste",
					null,
					"AQAAAFssAAAAAAAAoCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWywAAAAAAABbLAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "Sta"
					},
					"BAAAAJQsAAAAAAAAlSwAAAAAAAAAAAAAlSwAAAAAAACVLAAAAAAAAAwAAABPcmRlck1hbmFnZXKVLAAAAAAAAJYsAAAAAAAAAAAAAJYsAAAAAAAAlywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoCwAAAAAAACULAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert_completion",
					{
						"completion": "StairManager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "StairManager"
					},
					"AgAAAJQsAAAAAAAAlCwAAAAAAAADAAAAU3RhlCwAAAAAAACgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlywAAAAAAACXLAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKAsAAAAAAAAoSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoCwAAAAAAACgLAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEsAAAAAAAAoiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoSwAAAAAAAChLAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"paste",
					null,
					"AQAAAKIsAAAAAAAAsSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoiwAAAAAAACiLAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"paste",
					null,
					"AQAAALMsAAAAAAAA4iwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsywAAAAAAACzLAAAAAAAAAAAAAAAAAAA"
				],
				[
					302,
					1,
					"left_delete",
					null,
					"AQAAAOIsAAAAAAAA4iwAAAAAAAAgAAAAY2xhc3MgT3JkZXJNYW5hZ2VyKERhdGFNYW5hZ2VyKTo",
					"AQAAAAAAAAABAAAA4iwAAAAAAAACLQAAAAAAAP///////+9/"
				],
				[
					307,
					1,
					"paste",
					null,
					"AgAAALksAAAAAAAAxSwAAAAAAAAAAAAAxSwAAAAAAADFLAAAAAAAAA8AAABPcmRlck1hbmFnZXJPbGQ",
					"AQAAAAAAAAABAAAAyCwAAAAAAAC5LAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAPMjAAAAAAAA9CMAAAAAAAAAAAAA9CMAAAAAAAD8IwAAAAAAAAAAAAD8IwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAFJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8yMAAAAAAADzIwAAAAAAAP///////+9/"
				],
				[
					311,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUkAAAAAAAAByQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSQAAAAAAAAFJAAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAAYkAAAAAAAAByQAAAAAAAAAAAAAByQAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAkkAAAAAAAAAAAAAAkkAAAAAAAACiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAokAAAAAAAADCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiQAAAAAAAAKJAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA0kAAAAAAAADiQAAAAAAAAAAAAADiQAAAAAAAAaJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSQAAAAAAAANJAAAAAAAAP///////+9/"
				],
				[
					322,
					1,
					"paste",
					null,
					"AQAAABokAAAAAAAAJyQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGiQAAAAAAAAaJAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAACckAAAAAAAAKCQAAAAAAAAAAAAAKCQAAAAAAAA0JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyQAAAAAAAAnJAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"paste",
					null,
					"AQAAADQkAAAAAAAAQSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANCQAAAAAAAA0JAAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"paste",
					null,
					"AQAAAAskAAAAAAAAHiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACyQAAAAAAAALJAAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"paste",
					null,
					"AQAAADgkAAAAAAAASyQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOCQAAAAAAAA4JAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"paste",
					null,
					"AQAAAGUkAAAAAAAAeCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSQAAAAAAABlJAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"paste",
					null,
					"AgAAAEEkAAAAAAAASSQAAAAAAAAAAAAASSQAAAAAAABJJAAAAAAAAAgAAABvcmRlcl9pZA",
					"AQAAAAAAAAABAAAAQSQAAAAAAABJJAAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"paste",
					null,
					"AgAAAG4kAAAAAAAAcyQAAAAAAAAAAAAAcyQAAAAAAABzJAAAAAAAAAgAAABvcmRlcl9pZA",
					"AQAAAAAAAAABAAAAbiQAAAAAAAB2JAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAGwuAAAAAAAAbS4AAAAAAAAAAAAAbS4AAAAAAABxLgAAAAAAAAAAAABxLgAAAAAAAHUuAAAAAAAAAAAAAHUuAAAAAAAAdi4AAAAAAAAAAAAAdi4AAAAAAAB3LgAAAAAAAAAAAAB3LgAAAAAAAHguAAAAAAAAAAAAAHguAAAAAAAAeS4AAAAAAAAAAAAAeS4AAAAAAAB6LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbC4AAAAAAABsLgAAAAAAAP///////+9/"
				],
				[
					370,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHouAAAAAAAAfC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAei4AAAAAAAB6LgAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHsuAAAAAAAAfS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAey4AAAAAAAB7LgAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "Are"
					},
					"AwAAAHwuAAAAAAAAfS4AAAAAAAAAAAAAfS4AAAAAAAB+LgAAAAAAAAAAAAB+LgAAAAAAAH8uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfC4AAAAAAAB8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAH8uAAAAAAAAgC4AAAAAAAAAAAAAgC4AAAAAAACBLgAAAAAAAAAAAACBLgAAAAAAAIIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfy4AAAAAAAB/LgAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " goingg"
					},
					"BwAAAIIuAAAAAAAAgy4AAAAAAAAAAAAAgy4AAAAAAACELgAAAAAAAAAAAACELgAAAAAAAIUuAAAAAAAAAAAAAIUuAAAAAAAAhi4AAAAAAAAAAAAAhi4AAAAAAACHLgAAAAAAAAAAAACHLgAAAAAAAIguAAAAAAAAAAAAAIguAAAAAAAAiS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgi4AAAAAAACCLgAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " througgh"
					},
					"CQAAAIkuAAAAAAAAii4AAAAAAAAAAAAAii4AAAAAAACLLgAAAAAAAAAAAACLLgAAAAAAAIwuAAAAAAAAAAAAAIwuAAAAAAAAjS4AAAAAAAAAAAAAjS4AAAAAAACOLgAAAAAAAAAAAACOLgAAAAAAAI8uAAAAAAAAAAAAAI8uAAAAAAAAkC4AAAAAAAAAAAAAkC4AAAAAAACRLgAAAAAAAAAAAACRLgAAAAAAAJIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiS4AAAAAAACJLgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAJIuAAAAAAAAky4AAAAAAAAAAAAAky4AAAAAAACULgAAAAAAAAAAAACULgAAAAAAAJUuAAAAAAAAAAAAAJUuAAAAAAAAli4AAAAAAAAAAAAAli4AAAAAAACXLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAki4AAAAAAACSLgAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " one?"
					},
					"BQAAAJcuAAAAAAAAmC4AAAAAAAAAAAAAmC4AAAAAAACZLgAAAAAAAAAAAACZLgAAAAAAAJouAAAAAAAAAAAAAJouAAAAAAAAmy4AAAAAAAAAAAAAmy4AAAAAAACcLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAly4AAAAAAACXLgAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "Order"
					},
					"BgAAAHwuAAAAAAAAfS4AAAAAAAAAAAAAfS4AAAAAAAB9LgAAAAAAACAAAABBcmUgd2UgZ29pbmdnIHRocm91Z2doIHRoaXMgb25lP30uAAAAAAAAfi4AAAAAAAAAAAAAfi4AAAAAAAB/LgAAAAAAAAAAAAB/LgAAAAAAAIAuAAAAAAAAAAAAAIAuAAAAAAAAgS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfC4AAAAAAACcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert_completion",
					{
						"completion": "OrderManager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OrderManager"
					},
					"AgAAAHwuAAAAAAAAfC4AAAAAAAAFAAAAT3JkZXJ8LgAAAAAAAIguAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgS4AAAAAAACBLgAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": ".i="
					},
					"AwAAAIguAAAAAAAAiS4AAAAAAAAAAAAAiS4AAAAAAACKLgAAAAAAAAAAAACKLgAAAAAAAIsuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiC4AAAAAAACILgAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					2,
					"left_delete",
					null,
					"AgAAAIouAAAAAAAAii4AAAAAAAABAAAAPYkuAAAAAAAAiS4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAiy4AAAAAAACLLgAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": "__ini"
					},
					"BQAAAIkuAAAAAAAAii4AAAAAAAAAAAAAii4AAAAAAACLLgAAAAAAAAAAAACLLgAAAAAAAIwuAAAAAAAAAAAAAIwuAAAAAAAAjS4AAAAAAAAAAAAAjS4AAAAAAACOLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiS4AAAAAAACJLgAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert_completion",
					{
						"completion": "__init__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__init__"
					},
					"AgAAAIkuAAAAAAAAiS4AAAAAAAAFAAAAX19pbmmJLgAAAAAAAJEuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAji4AAAAAAACOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAABA/AAAAAAAAET8AAAAAAAAAAAAAET8AAAAAAAAVPwAAAAAAAAAAAAAVPwAAAAAAABk/AAAAAAAAAAAAABk/AAAAAAAAGj8AAAAAAAAAAAAAGj8AAAAAAAAbPwAAAAAAAAAAAAAbPwAAAAAAABw/AAAAAAAAAAAAABw/AAAAAAAAHT8AAAAAAAAAAAAAHT8AAAAAAAAePwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAED8AAAAAAAAQPwAAAAAAAP///////+9/"
				],
				[
					396,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB4/AAAAAAAAID8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHj8AAAAAAAAePwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAB8/AAAAAAAAIT8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHz8AAAAAAAAfPwAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAACA/AAAAAAAAIT8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAID8AAAAAAAAgPwAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"left_delete",
					null,
					"AQAAACA/AAAAAAAAID8AAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAIT8AAAAAAAAhPwAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "Or"
					},
					"AgAAACA/AAAAAAAAIT8AAAAAAAAAAAAAIT8AAAAAAAAiPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAID8AAAAAAAAgPwAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert_completion",
					{
						"completion": "OrderManager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OrderManager"
					},
					"AgAAACA/AAAAAAAAID8AAAAAAAACAAAAT3IgPwAAAAAAACw/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIj8AAAAAAAAiPwAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": ".place"
					},
					"BgAAACw/AAAAAAAALT8AAAAAAAAAAAAALT8AAAAAAAAuPwAAAAAAAAAAAAAuPwAAAAAAAC8/AAAAAAAAAAAAAC8/AAAAAAAAMD8AAAAAAAAAAAAAMD8AAAAAAAAxPwAAAAAAAAAAAAAxPwAAAAAAADI/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALD8AAAAAAAAsPwAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert_completion",
					{
						"completion": "placeComboOrder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "placeComboOrder"
					},
					"AgAAAC0/AAAAAAAALT8AAAAAAAAFAAAAcGxhY2UtPwAAAAAAADw/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMj8AAAAAAAAyPwAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAPMjAAAAAAAA9CMAAAAAAAAAAAAA9CMAAAAAAAD8IwAAAAAAAAAAAAD8IwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAFJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8yMAAAAAAADzIwAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUkAAAAAAAAByQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSQAAAAAAAAFJAAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAYkAAAAAAAACCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAYkAAAAAAAABiQAAAAAAAABAAAAJwYkAAAAAAAABiQAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAByQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAYkAAAAAAAACCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "Hmmmmm"
					},
					"BgAAAAckAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAJJAAAAAAAAAAAAAAJJAAAAAAAAAokAAAAAAAAAAAAAAokAAAAAAAACyQAAAAAAAAAAAAACyQAAAAAAAAMJAAAAAAAAAAAAAAMJAAAAAAAAA0kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "IBC"
					},
					"BAAAAAckAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAIJAAAAAAAAAYAAABIbW1tbW0IJAAAAAAAAAkkAAAAAAAAAAAAAAkkAAAAAAAACiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"insert_completion",
					{
						"completion": "IBConnectivtyNew",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "IBConnectivtyNew"
					},
					"AgAAAAckAAAAAAAAByQAAAAAAAADAAAASUJDByQAAAAAAAAXJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiQAAAAAAAAKJAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": ".place"
					},
					"BgAAABckAAAAAAAAGCQAAAAAAAAAAAAAGCQAAAAAAAAZJAAAAAAAAAAAAAAZJAAAAAAAABokAAAAAAAAAAAAABokAAAAAAAAGyQAAAAAAAAAAAAAGyQAAAAAAAAcJAAAAAAAAAAAAAAcJAAAAAAAAB0kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFyQAAAAAAAAXJAAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert_completion",
					{
						"completion": "placeOrder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "placeOrder"
					},
					"AgAAABgkAAAAAAAAGCQAAAAAAAAFAAAAcGxhY2UYJAAAAAAAACIkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHSQAAAAAAAAdJAAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"left_delete",
					null,
					"AQAAAHc3AAAAAAAAdzcAAAAAAAANAAAAaWJfaW50ZXJmYWNlLg",
					"AQAAAAAAAAABAAAAhDcAAAAAAAB3NwAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"left_delete",
					null,
					"AQAAABwyAAAAAAAAHDIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHTIAAAAAAAAdMgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"cut",
					null,
					"",
					"AQAAAAAAAAABAAAAqFkAAAAAAABnLQAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"left_delete",
					null,
					"AQAAAA8tAAAAAAAADy0AAAAAAABYAAAACmZyb20gZGF0YUhhbmRsaW5nLlRyYWRlTWFuYWdlbWVudC5PcmRlck1hbmFnZW1lbnQgaW1wb3J0IFN0YWlyTWFuYWdlciwgT3Blbk9yZGVyQnVmZmVyCg",
					"AQAAAAAAAAABAAAAZy0AAAAAAAAPLQAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "dataHandling/TradeManagement/OrderManagement.py",
			"settings":
			{
				"buffer_size": 36215,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "Old"
					},
					"AwAAAOMWAAAAAAAA5BYAAAAAAAAAAAAA5BYAAAAAAADlFgAAAAAAAAAAAADlFgAAAAAAAOYWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xYAAAAAAADjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAFsoAAAAAAAAXCgAAAAAAAAAAAAAXCgAAAAAAABdKAAAAAAAAAAAAABdKAAAAAAAAF4oAAAAAAAAAAAAAF4oAAAAAAAAXygAAAAAAAAAAAAAXygAAAAAAABgKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWygAAAAAAABbKAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGAoAAAAAAAAYigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCgAAAAAAABgKAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGEoAAAAAAAAYygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSgAAAAAAABhKAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "ARE"
					},
					"AwAAAGIoAAAAAAAAYygAAAAAAAAAAAAAYygAAAAAAABkKAAAAAAAAAAAAABkKAAAAAAAAGUoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYigAAAAAAABiKAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " WE"
					},
					"AwAAAGUoAAAAAAAAZigAAAAAAAAAAAAAZigAAAAAAABnKAAAAAAAAAAAAABnKAAAAAAAAGgoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSgAAAAAAABlKAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " USINGG"
					},
					"BwAAAGgoAAAAAAAAaSgAAAAAAAAAAAAAaSgAAAAAAABqKAAAAAAAAAAAAABqKAAAAAAAAGsoAAAAAAAAAAAAAGsoAAAAAAAAbCgAAAAAAAAAAAAAbCgAAAAAAABtKAAAAAAAAAAAAABtKAAAAAAAAG4oAAAAAAAAAAAAAG4oAAAAAAAAbygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCgAAAAAAABoKAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "O"
					},
					"AgAAAGIoAAAAAAAAYygAAAAAAAAAAAAAYygAAAAAAABjKAAAAAAAAA0AAABBUkUgV0UgVVNJTkdH",
					"AQAAAAAAAAABAAAAbygAAAAAAABiKAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAGIoAAAAAAAAYigAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAYygAAAAAAABjKAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "Order"
					},
					"BQAAAGIoAAAAAAAAYygAAAAAAAAAAAAAYygAAAAAAABkKAAAAAAAAAAAAABkKAAAAAAAAGUoAAAAAAAAAAAAAGUoAAAAAAAAZigAAAAAAAAAAAAAZigAAAAAAABnKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYigAAAAAAABiKAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert_completion",
					{
						"completion": "OrderManagerOld",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "OrderManagerOld"
					},
					"AgAAAGIoAAAAAAAAYigAAAAAAAAFAAAAT3JkZXJiKAAAAAAAAHEoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZygAAAAAAABnKAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ".place"
					},
					"BgAAAHEoAAAAAAAAcigAAAAAAAAAAAAAcigAAAAAAABzKAAAAAAAAAAAAABzKAAAAAAAAHQoAAAAAAAAAAAAAHQoAAAAAAAAdSgAAAAAAAAAAAAAdSgAAAAAAAB2KAAAAAAAAAAAAAB2KAAAAAAAAHcoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSgAAAAAAABxKAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert_completion",
					{
						"completion": "placeOrder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "placeOrder"
					},
					"AgAAAHIoAAAAAAAAcigAAAAAAAAFAAAAcGxhY2VyKAAAAAAAAHwoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdygAAAAAAAB3KAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"",
					"AQAAAAAAAAABAAAA1T8AAAAAAADQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAABBDAAAAAAAAEEMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAEUMAAAAAAAARQwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACIDAAAAAAAAIwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgMAAAAAAAAiAwAAAAAAAP///////+9/"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAACMDAAAAAAAATwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwMAAAAAAAAjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "IBC"
					},
					"BAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA2AwAAAAAAAAkAAABDb25zdGFudHM2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert_completion",
					{
						"completion": "IBConnectivity",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "IBConnectivity"
					},
					"AgAAADUDAAAAAAAANQMAAAAAAAADAAAASUJDNQMAAAAAAABDAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "New"
					},
					"AwAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"paste",
					null,
					"AgAAAE4DAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABcAwAAAAAAAAkAAABDb25zdGFudHM",
					"AQAAAAAAAAABAAAAVwMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "apps/autoTrader/LiveBufferedManager.py",
			"settings":
			{
				"buffer_size": 5122,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"insert",
					{
						"characters": "data"
					},
					"QQAAAH4VAAAAAAAAfxUAAAAAAAAAAAAAfxUAAAAAAAB/FQAAAAAAAAcAAABoaXN0b3J5ShMAAAAAAABLEwAAAAAAAAAAAABLEwAAAAAAAEsTAAAAAAAABwAAAGhpc3RvcnkhEAAAAAAAACIQAAAAAAAAAAAAACIQAAAAAAAAIhAAAAAAAAAHAAAAaGlzdG9yefsJAAAAAAAA/AkAAAAAAAAAAAAA/AkAAAAAAAD8CQAAAAAAAAcAAABoaXN0b3J5lQkAAAAAAACWCQAAAAAAAAAAAACWCQAAAAAAAJYJAAAAAAAABwAAAGhpc3RvcnklCQAAAAAAACYJAAAAAAAAAAAAACYJAAAAAAAAJgkAAAAAAAAHAAAAaGlzdG9yeboIAAAAAAAAuwgAAAAAAAAAAAAAuwgAAAAAAAC7CAAAAAAAAAcAAABoaXN0b3J5gggAAAAAAACDCAAAAAAAAAAAAACDCAAAAAAAAIMIAAAAAAAABwAAAGhpc3RvcnkYBwAAAAAAABkHAAAAAAAAAAAAABkHAAAAAAAAGQcAAAAAAAAHAAAAaGlzdG9yecIGAAAAAAAAwwYAAAAAAAAAAAAAwwYAAAAAAADDBgAAAAAAAAcAAABoaXN0b3J5lgYAAAAAAACXBgAAAAAAAAAAAACXBgAAAAAAAJcGAAAAAAAABwAAAGhpc3RvcnmEBgAAAAAAAIUGAAAAAAAAAAAAAIUGAAAAAAAAhQYAAAAAAAAHAAAAaGlzdG9yeRQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAVBgAAAAAAAAcAAABoaXN0b3J5NxUAAAAAAAA4FQAAAAAAAAAAAAAJEwAAAAAAAAoTAAAAAAAAAAAAAOYPAAAAAAAA5w8AAAAAAAAAAAAAxgkAAAAAAADHCQAAAAAAAAAAAABmCQAAAAAAAGcJAAAAAAAAAAAAAPwIAAAAAAAA/QgAAAAAAAAAAAAAlwgAAAAAAACYCAAAAAAAAAAAAABlCAAAAAAAAGYIAAAAAAAAAAAAAAEHAAAAAAAAAgcAAAAAAAAAAAAAsQYAAAAAAACyBgAAAAAAAAAAAACLBgAAAAAAAIwGAAAAAAAAAAAAAH8GAAAAAAAAgAYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAABEFQAAAAAAAEUVAAAAAAAAAAAAABUTAAAAAAAAFhMAAAAAAAAAAAAA8Q8AAAAAAADyDwAAAAAAAAAAAADQCQAAAAAAANEJAAAAAAAAAAAAAG8JAAAAAAAAcAkAAAAAAAAAAAAABAkAAAAAAAAFCQAAAAAAAAAAAACeCAAAAAAAAJ8IAAAAAAAAAAAAAGsIAAAAAAAAbAgAAAAAAAAAAAAABgcAAAAAAAAHBwAAAAAAAAAAAAC1BgAAAAAAALYGAAAAAAAAAAAAAI4GAAAAAAAAjwYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAIRMAAAAAAAAiEwAAAAAAAAAAAAD8DwAAAAAAAP0PAAAAAAAAAAAAANoJAAAAAAAA2wkAAAAAAAAAAAAAeAkAAAAAAAB5CQAAAAAAAAAAAAAMCQAAAAAAAA0JAAAAAAAAAAAAAKUIAAAAAAAApggAAAAAAAAAAAAAcQgAAAAAAAByCAAAAAAAAAAAAAALBwAAAAAAAAwHAAAAAAAAAAAAALkGAAAAAAAAugYAAAAAAAAAAAAAkQYAAAAAAACSBgAAAAAAAAAAAACDBgAAAAAAAIQGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAA",
					"AQAAAAAAAAANAAAAGwYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/iwYAAAAAAACEBgAAAAAAAAAAAAAAAPC/nQYAAAAAAACWBgAAAAAAAAAAAAAAAPC/yQYAAAAAAADCBgAAAAAAAAAAAAAAAPC/HwcAAAAAAAAYBwAAAAAAAAAAAAAAAPC/iQgAAAAAAACCCAAAAAAAAAAAAAAAAPC/wQgAAAAAAAC6CAAAAAAAAAAAAAAAAPC/LAkAAAAAAAAlCQAAAAAAAAAAAAAAAPC/nAkAAAAAAACVCQAAAAAAAAAAAAAAAPC/AgoAAAAAAAD7CQAAAAAAAAAAAAAAAPC/KBAAAAAAAAAhEAAAAAAAAAAAAAAAAPC/URMAAAAAAABKEwAAAAAAAAAAAAAAAPC/hRUAAAAAAAB+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABkKAAAAAAAAGgoAAAAAAAAAAAAAGgoAAAAAAAAiCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQoAAAAAAAAZCgAAAAAAAP///////+9/"
				],
				[
					49,
					1,
					"paste",
					null,
					"AQAAACIKAAAAAAAAhAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgoAAAAAAAAiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "real_time_"
					},
					"CwAAACcKAAAAAAAAKAoAAAAAAAAAAAAAKAoAAAAAAAAoCgAAAAAAABYAAABleGVjdXRlX3JlcXVlc3Rfc2lnbmFsKAoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAACoKAAAAAAAAAAAAACoKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAAsCgAAAAAAAAAAAAAsCgAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALgoAAAAAAAAAAAAALgoAAAAAAAAvCgAAAAAAAAAAAAAvCgAAAAAAADAKAAAAAAAAAAAAADAKAAAAAAAAMQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQoAAAAAAAAnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "request"
					},
					"BwAAADEKAAAAAAAAMgoAAAAAAAAAAAAAMgoAAAAAAAAzCgAAAAAAAAAAAAAzCgAAAAAAADQKAAAAAAAAAAAAADQKAAAAAAAANQoAAAAAAAAAAAAANQoAAAAAAAA2CgAAAAAAAAAAAAA2CgAAAAAAADcKAAAAAAAAAAAAADcKAAAAAAAAOAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQoAAAAAAAAxCgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "requestRea"
					},
					"CwAAAFMKAAAAAAAAVAoAAAAAAAAAAAAAVAoAAAAAAABUCgAAAAAAABYAAABpdGVyYXRlSGlzdG9yeVJlcXVlc3RzVAoAAAAAAABVCgAAAAAAAAAAAABVCgAAAAAAAFYKAAAAAAAAAAAAAFYKAAAAAAAAVwoAAAAAAAAAAAAAVwoAAAAAAABYCgAAAAAAAAAAAABYCgAAAAAAAFkKAAAAAAAAAAAAAFkKAAAAAAAAWgoAAAAAAAAAAAAAWgoAAAAAAABbCgAAAAAAAAAAAABbCgAAAAAAAFwKAAAAAAAAAAAAAFwKAAAAAAAAXQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQoAAAAAAABTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "lT"
					},
					"AgAAAF0KAAAAAAAAXgoAAAAAAAAAAAAAXgoAAAAAAABfCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQoAAAAAAABdCgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAF4KAAAAAAAAXgoAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAXwoAAAAAAABfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "timeBars"
					},
					"CAAAAF4KAAAAAAAAXwoAAAAAAAAAAAAAXwoAAAAAAABgCgAAAAAAAAAAAABgCgAAAAAAAGEKAAAAAAAAAAAAAGEKAAAAAAAAYgoAAAAAAAAAAAAAYgoAAAAAAABjCgAAAAAAAAAAAABjCgAAAAAAAGQKAAAAAAAAAAAAAGQKAAAAAAAAZQoAAAAAAAAAAAAAZQoAAAAAAABmCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgoAAAAAAABeCgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"paste",
					null,
					"AgAAAFMKAAAAAAAAaAoAAAAAAAAAAAAAaAoAAAAAAABoCgAAAAAAABMAAAByZXF1ZXN0UmVhbHRpbWVCYXJz",
					"AQAAAAAAAAABAAAAUwoAAAAAAABmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					2,
					"left_delete",
					null,
					"AgAAADMSAAAAAAAAMxIAAAAAAAAlAwAACiAgICBAcHlxdFNsb3Qoc3RyLCBib29sLCBib29sKQogICAgZGVmIHJlcXVlc3RVcGRhdGVzKHNlbGYsIHVwZGF0ZV9iYXI9Q29uc3RhbnRzLk9ORV9NSU5fQkFSLCBrZWVwX3VwX3RvX2RhdGU9RmFsc2UsIHByb3BhZ2F0ZV91cGRhdGVzPUZhbHNlLCB1cGRhdGVfbGlzdD1Ob25lLCBuZWVkc19kaXNjb25uZWN0PUZhbHNlLCBhbGxvd19zcGxpdHRpbmc9VHJ1ZSk6CiAgICAgICAgcHJpbnQoZiJMaXZlQnVmZmVyZWRNYW5hZ2VyLnJlcXVlc3RVcGRhdGVzIHt1cGRhdGVfYmFyfSB7a2VlcF91cF90b19kYXRlfSB7cHJvcGFnYXRlX3VwZGF0ZXN9IikKCiAgICAgICAgaWYgbmVlZHNfZGlzY29ubmVjdDogc2VsZi5kYXRhX21hbmFnZXIuY2xlYW51cF9kb25lX3NpZ25hbC5kaXNjb25uZWN0KCkKICAgICAgICAKICAgICAgICBpZiB1cGRhdGVfbGlzdCBpcyBOb25lOgogICAgICAgICAgICB1cGRhdGVfbGlzdCA9IHNlbGYuX2J1ZmZlcmluZ19zdG9ja3MuY29weSgpCgogICAgICAgIGVuZF9kYXRlID0gZGF0ZXRpbWUubm93KHRpbWV6b25lKENvbnN0YW50cy5OWUNfVElNRVpPTkUpKS5yZXBsYWNlKG1pY3Jvc2Vjb25kPTApCiAgICAgICAgZm9yIHVpZCBpbiB1cGRhdGVfbGlzdDoKICAgICAgICAgICAgdXBkYXRlX2xpc3RbdWlkXVsnYmVnaW5fZGF0ZSddID0gZW5kX2RhdGUgLSByZWxhdGl2ZWRlbHRhKG1pbnV0ZXM9MTgwKQogICAgICAgIAogICAgICAgIHNlbGYucmVxdWVzdF91cGRhdGVfc2lnbmFsLmVtaXQodXBkYXRlX2xpc3QsIHVwZGF0ZV9iYXIsIGtlZXBfdXBfdG9fZGF0ZSwgcHJvcGFnYXRlX3VwZGF0ZXMpCjISAAAAAAAAMhIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAWBUAAAAAAAAzEgAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA+wUAAAAAAAD/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAP8FAAAAAAAAEAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " pyqt"
					},
					"BQAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAXBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_completion",
					{
						"completion": "pyqtSignal",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "pyqtSignal"
					},
					"AgAAABMGAAAAAAAAEwYAAAAAAAAEAAAAcHlxdBMGAAAAAAAAHQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAB0GAAAAAAAAHwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQYAAAAAAAAdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "Det"
					},
					"AwAAAB4GAAAAAAAAHwYAAAAAAAAAAAAAHwYAAAAAAAAgBgAAAAAAAAAAAAAgBgAAAAAAACEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgYAAAAAAAAeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert_completion",
					{
						"completion": "DetailObject",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DetailObject"
					},
					"AgAAAB4GAAAAAAAAHgYAAAAAAAADAAAARGV0HgYAAAAAAAAqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGQSAAAAAAAAZRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBIAAAAAAABkEgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAGQSAAAAAAAAZBIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAZRIAAAAAAABlEgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAUDAAAAAAAABgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQMAAAAAAAAFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"paste",
					null,
					"AQAAAAYDAAAAAAAAKQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"paste",
					null,
					"AgAAAEIGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABKBgAAAAAAAAwAAABEZXRhaWxPYmplY3Q",
					"AQAAAAAAAAABAAAAQgYAAAAAAABOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM8KAAAAAAAA0AoAAAAAAAAAAAAA0AoAAAAAAADYCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwoAAAAAAADPCgAAAAAAAP///////+9/"
				],
				[
					148,
					1,
					"paste",
					null,
					"AQAAANgKAAAAAAAANAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AoAAAAAAADYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "cancel_real"
					},
					"DAAAAN0KAAAAAAAA3goAAAAAAAAAAAAA3goAAAAAAADeCgAAAAAAABEAAAByZWFsX3RpbWVfcmVxdWVzdN4KAAAAAAAA3woAAAAAAAAAAAAA3woAAAAAAADgCgAAAAAAAAAAAADgCgAAAAAAAOEKAAAAAAAAAAAAAOEKAAAAAAAA4goAAAAAAAAAAAAA4goAAAAAAADjCgAAAAAAAAAAAADjCgAAAAAAAOQKAAAAAAAAAAAAAOQKAAAAAAAA5QoAAAAAAAAAAAAA5QoAAAAAAADmCgAAAAAAAAAAAADmCgAAAAAAAOcKAAAAAAAAAAAAAOcKAAAAAAAA6AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QoAAAAAAADuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ")t"
					},
					"AgAAAOgKAAAAAAAA6QoAAAAAAAAAAAAA6QoAAAAAAADqCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AoAAAAAAADoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					3,
					"left_delete",
					null,
					"AwAAAOkKAAAAAAAA6QoAAAAAAAABAAAAdOgKAAAAAAAA6AoAAAAAAAABAAAAKecKAAAAAAAA5woAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA6goAAAAAAADqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOcKAAAAAAAA6AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5woAAAAAAADnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"left_delete",
					null,
					"AQAAAOcKAAAAAAAA5woAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA6AoAAAAAAADoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "l_time_requ"
					},
					"CwAAAOcKAAAAAAAA6AoAAAAAAAAAAAAA6AoAAAAAAADpCgAAAAAAAAAAAADpCgAAAAAAAOoKAAAAAAAAAAAAAOoKAAAAAAAA6woAAAAAAAAAAAAA6woAAAAAAADsCgAAAAAAAAAAAADsCgAAAAAAAO0KAAAAAAAAAAAAAO0KAAAAAAAA7goAAAAAAAAAAAAA7goAAAAAAADvCgAAAAAAAAAAAADvCgAAAAAAAPAKAAAAAAAAAAAAAPAKAAAAAAAA8QoAAAAAAAAAAAAA8QoAAAAAAADyCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5woAAAAAAADnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "est"
					},
					"AwAAAPIKAAAAAAAA8woAAAAAAAAAAAAA8woAAAAAAAD0CgAAAAAAAAAAAAD0CgAAAAAAAPUKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8goAAAAAAADyCgAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"left_delete",
					null,
					"AQAAABULAAAAAAAAFQsAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAFgsAAAAAAAAWCwAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "ff"
					},
					"AgAAABULAAAAAAAAFgsAAAAAAAAAAAAAFgsAAAAAAAAXCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQsAAAAAAAAVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEsGAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABQBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAP///////+9/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAFAGAAAAAAAAaAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGgGAAAAAAAAaQYAAAAAAAAAAAAAaQYAAAAAAABqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAYAAAAAAABoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " pyqt"
					},
					"BQAAAGoGAAAAAAAAawYAAAAAAAAAAAAAawYAAAAAAABsBgAAAAAAAAAAAABsBgAAAAAAAG0GAAAAAAAAAAAAAG0GAAAAAAAAbgYAAAAAAAAAAAAAbgYAAAAAAABvBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagYAAAAAAABqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert_completion",
					{
						"completion": "pyqtSignal",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "pyqtSignal"
					},
					"AgAAAGsGAAAAAAAAawYAAAAAAAAEAAAAcHlxdGsGAAAAAAAAdQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUGAAAAAAAAdwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAHYGAAAAAAAAdwYAAAAAAAAAAAAAdwYAAAAAAAB4BgAAAAAAAAAAAAB4BgAAAAAAAHkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgYAAAAAAAB2BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "dataHandling/HistoryManagement/HistoricalDataManagement.py",
			"settings":
			{
				"buffer_size": 26416,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAMoCAAAAAAAAygIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "Contract"
					},
					"CQAAAB0tAAAAAAAAHi0AAAAAAAAAAAAAHi0AAAAAAAAeLQAAAAAAAAwAAABEZXRhaWxPYmplY3QeLQAAAAAAAB8tAAAAAAAAAAAAAB8tAAAAAAAAIC0AAAAAAAAAAAAAIC0AAAAAAAAhLQAAAAAAAAAAAAAhLQAAAAAAACItAAAAAAAAAAAAACItAAAAAAAAIy0AAAAAAAAAAAAAIy0AAAAAAAAkLQAAAAAAAAAAAAAkLQAAAAAAACUtAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKS0AAAAAAAAdLQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAUuAAAAAAAABi4AAAAAAAAAAAAABi4AAAAAAAAHLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABS4AAAAAAAAFLgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"paste",
					null,
					"AQAAAAcuAAAAAAAAiy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABy4AAAAAAAAHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAABcvAAAAAAAAFy8AAAAAAAAKAAAANCAgICAgICAgIA",
					"AQAAAAAAAAABAAAAFy8AAAAAAAAhLwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAALsuAAAAAAAAuy4AAAAAAAAKAAAAMyAgICAgICAgIA",
					"AQAAAAAAAAABAAAAuy4AAAAAAADFLgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAHEuAAAAAAAAcS4AAAAAAAAaAAAAMiAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAcS4AAAAAAACLLgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					2,
					"left_delete",
					null,
					"AgAAAG0uAAAAAAAAbS4AAAAAAAAEAAAAICAgIGwuAAAAAAAAbC4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcS4AAAAAAABtLgAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGwuAAAAAAAAbS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbC4AAAAAAABsLgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"indent",
					null,
					"AQAAAAcuAAAAAAAACy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABy4AAAAAAAAHLgAAAAAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"indent",
					null,
					"AQAAAJ0uAAAAAAAAoS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoS4AAAAAAAChLgAAAAAAAAAAAAAAAEBA"
				],
				[
					41,
					1,
					"indent",
					null,
					"AQAAAPMuAAAAAAAA9y4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9y4AAAAAAAD3LgAAAAAAAAAAAAAAAEBA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAYuAAAAAAAABy4AAAAAAAAAAAAABy4AAAAAAAAILgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABi4AAAAAAAAGLgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"reindent",
					null,
					"AQAAAAguAAAAAAAAEC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACC4AAAAAAAAILgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"reindent",
					null,
					"AQAAAAcuAAAAAAAADy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABy4AAAAAAAAHLgAAAAAAAAAAAAAAAFBA"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AgAAAAsuAAAAAAAACy4AAAAAAAAEAAAAICAgIAwuAAAAAAAADC4AAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAADy4AAAAAAAAPLgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"paste",
					null,
					"AQAAAAsuAAAAAAAAIS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACy4AAAAAAAALLgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAsuAAAAAAAADC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACy4AAAAAAAALLgAAAAAAAAAAAAAAAEBA"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAAsuAAAAAAAACy4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAADC4AAAAAAAAMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAAsuAAAAAAAADC4AAAAAAAAAAAAADC4AAAAAAAANLgAAAAAAAAAAAAANLgAAAAAAAA4uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACy4AAAAAAAALLgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4uAAAAAAAADy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADi4AAAAAAAAOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"reindent",
					null,
					"AQAAAAYuAAAAAAAADi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABi4AAAAAAAAGLgAAAAAAAAAAAAAAAFBA"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAAA4uAAAAAAAADy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADi4AAAAAAAAOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					2,
					"left_delete",
					null,
					"AgAAAA4uAAAAAAAADi4AAAAAAAABAAAAQAouAAAAAAAACi4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAADy4AAAAAAAAPLgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAAAouAAAAAAAACy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACi4AAAAAAAAKLgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAouAAAAAAAACy4AAAAAAAAAAAAACy4AAAAAAAAPLgAAAAAAAAAAAAAGLgAAAAAAAAYuAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAACi4AAAAAAAAKLgAAAAAAAAAAAAAAAEBA"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "pyqtSl"
					},
					"BgAAAAwuAAAAAAAADS4AAAAAAAAAAAAADS4AAAAAAAAOLgAAAAAAAAAAAAAOLgAAAAAAAA8uAAAAAAAAAAAAAA8uAAAAAAAAEC4AAAAAAAAAAAAAEC4AAAAAAAARLgAAAAAAAAAAAAARLgAAAAAAABIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADC4AAAAAAAAMLgAAAAAAAP///////+9/"
				],
				[
					67,
					1,
					"insert_completion",
					{
						"completion": "pyqtSlot",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "pyqtSlot"
					},
					"AgAAAAwuAAAAAAAADC4AAAAAAAAGAAAAcHlxdFNsDC4AAAAAAAAULgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEi4AAAAAAAASLgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABQuAAAAAAAAFi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFC4AAAAAAAAULgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADUuAAAAAAAANy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANS4AAAAAAAA1LgAAAAAAAP///////+9/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "self,"
					},
					"BQAAADYuAAAAAAAANy4AAAAAAAAAAAAANy4AAAAAAAA4LgAAAAAAAAAAAAA4LgAAAAAAADkuAAAAAAAAAAAAADkuAAAAAAAAOi4AAAAAAAAAAAAAOi4AAAAAAAA7LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANi4AAAAAAAA2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsuAAAAAAAAPC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOy4AAAAAAAA7LgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "con"
					},
					"AwAAADwuAAAAAAAAPS4AAAAAAAAAAAAAPS4AAAAAAAA+LgAAAAAAAAAAAAA+LgAAAAAAAD8uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPC4AAAAAAAA8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					3,
					"left_delete",
					null,
					"AwAAAD4uAAAAAAAAPi4AAAAAAAABAAAAbj0uAAAAAAAAPS4AAAAAAAABAAAAbzwuAAAAAAAAPC4AAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAPy4AAAAAAAA/LgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAGYtAAAAAAAAZi0AAAAAAAAwAAAAY29udHJhY3QgPSBzZWxmLmdldENvbnRyYWN0Rm9yKGNvbnRyYWN0X2RldGFpbHMp",
					"AQAAAAAAAAABAAAAZi0AAAAAAACWLQAAAAAAAP///////+9/"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAF0tAAAAAAAAXS0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXi0AAAAAAABeLQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "cnt"
					},
					"BAAAAEstAAAAAAAATC0AAAAAAAAAAAAATC0AAAAAAABMLQAAAAAAABAAAABjb250cmFjdF9kZXRhaWxzTC0AAAAAAABNLQAAAAAAAAAAAABNLQAAAAAAAE4tAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWy0AAAAAAABLLQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					2,
					"left_delete",
					null,
					"AgAAAE0tAAAAAAAATS0AAAAAAAABAAAAdEwtAAAAAAAATC0AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAATi0AAAAAAABOLQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "ontract"
					},
					"BwAAAEwtAAAAAAAATS0AAAAAAAAAAAAATS0AAAAAAABOLQAAAAAAAAAAAABOLQAAAAAAAE8tAAAAAAAAAAAAAE8tAAAAAAAAUC0AAAAAAAAAAAAAUC0AAAAAAABRLQAAAAAAAAAAAABRLQAAAAAAAFItAAAAAAAAAAAAAFItAAAAAAAAUy0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATC0AAAAAAABMLQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "uid"
					},
					"AwAAAAMuAAAAAAAABC4AAAAAAAAAAAAABC4AAAAAAAAFLgAAAAAAAAAAAAAFLgAAAAAAAAYuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAy4AAAAAAAADLgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAcuAAAAAAAACC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABy4AAAAAAAAHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAguAAAAAAAACS4AAAAAAAAAAAAACS4AAAAAAAANLgAAAAAAAAAAAAANLgAAAAAAABEuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACC4AAAAAAAAILgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"paste",
					null,
					"AQAAABEuAAAAAAAAGS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAES4AAAAAAAARLgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "self.req"
					},
					"CQAAABEuAAAAAAAAEi4AAAAAAAAAAAAAEi4AAAAAAAASLgAAAAAAAAgAAABjb250cmFjdBIuAAAAAAAAEy4AAAAAAAAAAAAAEy4AAAAAAAAULgAAAAAAAAAAAAAULgAAAAAAABUuAAAAAAAAAAAAABUuAAAAAAAAFi4AAAAAAAAAAAAAFi4AAAAAAAAXLgAAAAAAAAAAAAAXLgAAAAAAABguAAAAAAAAAAAAABguAAAAAAAAGS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGS4AAAAAAAARLgAAAAAAAAAAAAAAAFBA"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAABkuAAAAAAAAGi4AAAAAAAAAAAAAGi4AAAAAAAAbLgAAAAAAAAAAAAAbLgAAAAAAABwuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGS4AAAAAAAAZLgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "_req"
					},
					"BQAAABYuAAAAAAAAFy4AAAAAAAAAAAAAFy4AAAAAAAAXLgAAAAAAAAYAAAByZXFfaWQXLgAAAAAAABguAAAAAAAAAAAAABguAAAAAAAAGS4AAAAAAAAAAAAAGS4AAAAAAAAaLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHC4AAAAAAAAWLgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABouAAAAAAAAGy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGi4AAAAAAAAaLgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					4,
					"left_delete",
					null,
					"BAAAABouAAAAAAAAGi4AAAAAAAABAAAAXxkuAAAAAAAAGS4AAAAAAAABAAAAcRguAAAAAAAAGC4AAAAAAAABAAAAZRcuAAAAAAAAFy4AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAGy4AAAAAAAAbLgAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "uid"
					},
					"AwAAABcuAAAAAAAAGC4AAAAAAAAAAAAAGC4AAAAAAAAZLgAAAAAAAAAAAAAZLgAAAAAAABouAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFy4AAAAAAAAXLgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert_completion",
					{
						"completion": "_uid_by_req",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_uid_by_req"
					},
					"AgAAABYuAAAAAAAAFi4AAAAAAAAEAAAAX3VpZBYuAAAAAAAAIS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGi4AAAAAAAAaLgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAABEuAAAAAAAAEi4AAAAAAAAAAAAAEi4AAAAAAAATLgAAAAAAAAAAAAATLgAAAAAAABQuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAES4AAAAAAAARLgAAAAAAAAAAAAAAAFBA"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQuAAAAAAAAFS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFC4AAAAAAAAULgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\nself."
					},
					"BwAAAIgtAAAAAAAAiS0AAAAAAAAAAAAAiS0AAAAAAACRLQAAAAAAAAAAAACRLQAAAAAAAJItAAAAAAAAAAAAAJItAAAAAAAAky0AAAAAAAAAAAAAky0AAAAAAACULQAAAAAAAAAAAACULQAAAAAAAJUtAAAAAAAAAAAAAJUtAAAAAAAAli0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiC0AAAAAAACILQAAAAAAAP///////+9/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAJYtAAAAAAAAly0AAAAAAAAAAAAAly0AAAAAAACYLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAli0AAAAAAACWLQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					2,
					"left_delete",
					null,
					"AgAAAJctAAAAAAAAly0AAAAAAAABAAAAZZYtAAAAAAAAli0AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAmC0AAAAAAACYLQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAJYtAAAAAAAAly0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAli0AAAAAAACWLQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAAJYtAAAAAAAAli0AAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAly0AAAAAAACXLQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "_uid"
					},
					"BAAAAJYtAAAAAAAAly0AAAAAAAAAAAAAly0AAAAAAACYLQAAAAAAAAAAAACYLQAAAAAAAJktAAAAAAAAAAAAAJktAAAAAAAAmi0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAli0AAAAAAACWLQAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert_completion",
					{
						"completion": "_uid_by_req",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_uid_by_req"
					},
					"AgAAAJYtAAAAAAAAli0AAAAAAAAEAAAAX3VpZJYtAAAAAAAAoS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmi0AAAAAAACaLQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAKEtAAAAAAAAoy0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoS0AAAAAAAChLQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "req"
					},
					"AwAAAKItAAAAAAAAoy0AAAAAAAAAAAAAoy0AAAAAAACkLQAAAAAAAAAAAACkLQAAAAAAAKUtAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoi0AAAAAAACiLQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert_completion",
					{
						"completion": "req_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "req_id"
					},
					"AgAAAKItAAAAAAAAoi0AAAAAAAADAAAAcmVxoi0AAAAAAACoLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApS0AAAAAAAClLQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKktAAAAAAAAqi0AAAAAAAAAAAAAqi0AAAAAAACrLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqS0AAAAAAACpLQAAAAAAAP///////+9/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " con"
					},
					"BAAAAKstAAAAAAAArC0AAAAAAAAAAAAArC0AAAAAAACtLQAAAAAAAAAAAACtLQAAAAAAAK4tAAAAAAAAAAAAAK4tAAAAAAAAry0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqy0AAAAAAACrLQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert_completion",
					{
						"completion": "contract",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "contract"
					},
					"AgAAAKwtAAAAAAAArC0AAAAAAAADAAAAY29urC0AAAAAAAC0LQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAry0AAAAAAACvLQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "mn"
					},
					"AgAAALQtAAAAAAAAtS0AAAAAAAAAAAAAtS0AAAAAAAC2LQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtC0AAAAAAAC0LQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					2,
					"left_delete",
					null,
					"AgAAALUtAAAAAAAAtS0AAAAAAAABAAAAbrQtAAAAAAAAtC0AAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAti0AAAAAAAC2LQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": ".num"
					},
					"BAAAALQtAAAAAAAAtS0AAAAAAAAAAAAAtS0AAAAAAAC2LQAAAAAAAAAAAAC2LQAAAAAAALctAAAAAAAAAAAAALctAAAAAAAAuC0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtC0AAAAAAAC0LQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert_completion",
					{
						"completion": "numeric_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "numeric_id"
					},
					"AgAAALUtAAAAAAAAtS0AAAAAAAADAAAAbnVttS0AAAAAAAC/LQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuC0AAAAAAAC4LQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"left_delete",
					null,
					"AQAAALQtAAAAAAAAtC0AAAAAAAALAAAALm51bWVyaWNfaWQ",
					"AQAAAAAAAAABAAAAvy0AAAAAAAC0LQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ".con"
					},
					"BAAAALQtAAAAAAAAtS0AAAAAAAAAAAAAtS0AAAAAAAC2LQAAAAAAAAAAAAC2LQAAAAAAALctAAAAAAAAAAAAALctAAAAAAAAuC0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtC0AAAAAAAC0LQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "Id"
					},
					"AgAAALgtAAAAAAAAuS0AAAAAAAAAAAAAuS0AAAAAAAC6LQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuC0AAAAAAAC4LQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": ".items"
					},
					"BgAAAFcuAAAAAAAAWC4AAAAAAAAAAAAAWC4AAAAAAABZLgAAAAAAAAAAAABZLgAAAAAAAFouAAAAAAAAAAAAAFouAAAAAAAAWy4AAAAAAAAAAAAAWy4AAAAAAABcLgAAAAAAAAAAAABcLgAAAAAAAF0uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVy4AAAAAAABXLgAAAAAAAP///////+9/"
				],
				[
					209,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0uAAAAAAAAXy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXS4AAAAAAABdLgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "req_d"
					},
					"BQAAAEcuAAAAAAAASC4AAAAAAAAAAAAASC4AAAAAAABJLgAAAAAAAAAAAABJLgAAAAAAAEouAAAAAAAAAAAAAEouAAAAAAAASy4AAAAAAAAAAAAASy4AAAAAAABMLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARy4AAAAAAABHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAEsuAAAAAAAASy4AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAATC4AAAAAAABMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "id,"
					},
					"AwAAAEsuAAAAAAAATC4AAAAAAAAAAAAATC4AAAAAAABNLgAAAAAAAAAAAABNLgAAAAAAAE4uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASy4AAAAAAABLLgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " uid"
					},
					"BAAAAE4uAAAAAAAATy4AAAAAAAAAAAAATy4AAAAAAABQLgAAAAAAAAAAAABQLgAAAAAAAFEuAAAAAAAAAAAAAFEuAAAAAAAAUi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATi4AAAAAAABOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAFIuAAAAAAAAUy4AAAAAAAAAAAAAUy4AAAAAAABULgAAAAAAAAAAAABULgAAAAAAAFUuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUi4AAAAAAABSLgAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUuAAAAAAAAVi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVS4AAAAAAABVLgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAG4uAAAAAAAAby4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbi4AAAAAAABuLgAAAAAAAP///////+9/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\nin"
					},
					"BQAAAG8uAAAAAAAAcC4AAAAAAAAAAAAAcC4AAAAAAAB4LgAAAAAAAAAAAAB4LgAAAAAAAHwuAAAAAAAAAAAAAHwuAAAAAAAAfS4AAAAAAAAAAAAAfS4AAAAAAAB+LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAby4AAAAAAABvLgAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH4uAAAAAAAAfy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfi4AAAAAAAB+LgAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					3,
					"left_delete",
					null,
					"AwAAAH4uAAAAAAAAfi4AAAAAAAABAAAAIH0uAAAAAAAAfS4AAAAAAAABAAAAbnwuAAAAAAAAfC4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAfy4AAAAAAAB/LgAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAHwuAAAAAAAAfS4AAAAAAAAAAAAAfS4AAAAAAAB+LgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfC4AAAAAAAB8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " uid"
					},
					"BAAAAH4uAAAAAAAAfy4AAAAAAAAAAAAAfy4AAAAAAACALgAAAAAAAAAAAACALgAAAAAAAIEuAAAAAAAAAAAAAIEuAAAAAAAAgi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfi4AAAAAAAB+LgAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAIIuAAAAAAAAgy4AAAAAAAAAAAAAgy4AAAAAAACELgAAAAAAAAAAAACELgAAAAAAAIUuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgi4AAAAAAACCLgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "cancel_"
					},
					"BwAAADUuAAAAAAAANi4AAAAAAAAAAAAANi4AAAAAAAA3LgAAAAAAAAAAAAA3LgAAAAAAADguAAAAAAAAAAAAADguAAAAAAAAOS4AAAAAAAAAAAAAOS4AAAAAAAA6LgAAAAAAAAAAAAA6LgAAAAAAADsuAAAAAAAAAAAAADsuAAAAAAAAPC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANS4AAAAAAAA1LgAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwuAAAAAAAAjS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjC4AAAAAAACMLgAAAAAAAAAAAAAAgHdA"
				],
				[
					239,
					1,
					"paste",
					null,
					"AQAAAI0uAAAAAAAAly4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjS4AAAAAAACNLgAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJcuAAAAAAAAmC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAly4AAAAAAACXLgAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "\nself."
					},
					"CAAAAJguAAAAAAAAmS4AAAAAAAAAAAAAmS4AAAAAAAClLgAAAAAAAAAAAAClLgAAAAAAAKkuAAAAAAAAAAAAAKkuAAAAAAAAqi4AAAAAAAAAAAAAqi4AAAAAAACrLgAAAAAAAAAAAACrLgAAAAAAAKwuAAAAAAAAAAAAAKwuAAAAAAAArS4AAAAAAAAAAAAArS4AAAAAAACuLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmC4AAAAAAACYLgAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "cancel"
					},
					"BgAAAK4uAAAAAAAAry4AAAAAAAAAAAAAry4AAAAAAACwLgAAAAAAAAAAAACwLgAAAAAAALEuAAAAAAAAAAAAALEuAAAAAAAAsi4AAAAAAAAAAAAAsi4AAAAAAACzLgAAAAAAAAAAAACzLgAAAAAAALQuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAri4AAAAAAACuLgAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAA4uAAAAAAAADy4AAAAAAAAAAAAADy4AAAAAAAAQLgAAAAAAAAAAAAAQLgAAAAAAABEuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADi4AAAAAAAAOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"paste",
					null,
					"AgAAALEuAAAAAAAA4S4AAAAAAAAAAAAA4S4AAAAAAADhLgAAAAAAAAYAAABjYW5jZWw",
					"AQAAAAAAAAABAAAAty4AAAAAAACxLgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					3,
					"left_delete",
					null,
					"AwAAAOAuAAAAAAAA4C4AAAAAAAABAAAACt8uAAAAAAAA3y4AAAAAAAABAAAAIN4uAAAAAAAA3i4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4S4AAAAAAADhLgAAAAAAAAAAAAAAAIFA"
				],
				[
					259,
					1,
					"left_delete",
					null,
					"AQAAAMUuAAAAAAAAxS4AAAAAAAAZAAAAICAgaW50ICAgICB0aWNrZXJJZCkgICAgIA",
					"AQAAAAAAAAABAAAAxS4AAAAAAADeLgAAAAAAAP///////+9/"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAMMuAAAAAAAAwy4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAxC4AAAAAAADELgAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMUuAAAAAAAAxi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxS4AAAAAAADFLgAAAAAAAAAAAAAAgHNA"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAAMQuAAAAAAAAxS4AAAAAAAAAAAAAxS4AAAAAAADGLgAAAAAAAAAAAADGLgAAAAAAAMcuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxC4AAAAAAADELgAAAAAAAP///////+9/"
				],
				[
					267,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMcuAAAAAAAAyS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxy4AAAAAAADHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMkuAAAAAAAAyi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyS4AAAAAAADJLgAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "cance"
					},
					"BQAAAMguAAAAAAAAyS4AAAAAAAAAAAAAyS4AAAAAAADKLgAAAAAAAAAAAADKLgAAAAAAAMsuAAAAAAAAAAAAAMsuAAAAAAAAzC4AAAAAAAAAAAAAzC4AAAAAAADNLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyC4AAAAAAADILgAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert_completion",
					{
						"completion": "cancel_uid",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cancel_uid"
					},
					"AgAAAMguAAAAAAAAyC4AAAAAAAAFAAAAY2FuY2XILgAAAAAAANIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzS4AAAAAAADNLgAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					4,
					"left_delete",
					null,
					"BAAAAMcuAAAAAAAAxy4AAAAAAAALAAAAKGNhbmNlbF91aWTGLgAAAAAAAMYuAAAAAAAAAQAAAHTFLgAAAAAAAMUuAAAAAAAAAQAAAG7ELgAAAAAAAMQuAAAAAAAAAQAAAGk",
					"AQAAAAAAAAABAAAA0i4AAAAAAADHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"left_delete",
					null,
					"AQAAAMQuAAAAAAAAxC4AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAxS4AAAAAAADFLgAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "req"
					},
					"AwAAAMQuAAAAAAAAxS4AAAAAAAAAAAAAxS4AAAAAAADGLgAAAAAAAAAAAADGLgAAAAAAAMcuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxC4AAAAAAADELgAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert_completion",
					{
						"completion": "req_id",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "req_id"
					},
					"AgAAAMQuAAAAAAAAxC4AAAAAAAADAAAAcmVxxC4AAAAAAADKLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxy4AAAAAAADHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"left_delete",
					null,
					"AQAAAOkvAAAAAAAA6S8AAAAAAAAMAAAAUmVhbFRpbWVCYXIo",
					"AQAAAAAAAAABAAAA6S8AAAAAAAD1LwAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"left_delete",
					null,
					"AQAAAB4wAAAAAAAAHjAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAHzAAAAAAAAAfMAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "int"
					},
					"BAAAAO8uAAAAAAAA8C4AAAAAAAAAAAAA8C4AAAAAAADwLgAAAAAAAAgAAABUaWNrZXJJZPAuAAAAAAAA8S4AAAAAAAAAAAAA8S4AAAAAAADyLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7y4AAAAAAAD3LgAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "float"
					},
					"BgAAADsvAAAAAAAAPC8AAAAAAAAAAAAAPC8AAAAAAAA8LwAAAAAAAAcAAABEZWNpbWFsPC8AAAAAAAA9LwAAAAAAAAAAAAA9LwAAAAAAAD4vAAAAAAAAAAAAAD4vAAAAAAAAPy8AAAAAAAAAAAAAPy8AAAAAAABALwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOy8AAAAAAABCLwAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "float"
					},
					"BgAAAEcvAAAAAAAASC8AAAAAAAAAAAAASC8AAAAAAABILwAAAAAAAAcAAABEZWNpbWFsSC8AAAAAAABJLwAAAAAAAAAAAABJLwAAAAAAAEovAAAAAAAAAAAAAEovAAAAAAAASy8AAAAAAAAAAAAASy8AAAAAAABMLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATi8AAAAAAABHLwAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "type:"
					},
					"BQAAANUtAAAAAAAA1i0AAAAAAAAAAAAA1i0AAAAAAADXLQAAAAAAAAAAAADXLQAAAAAAANgtAAAAAAAAAAAAANgtAAAAAAAA2S0AAAAAAAAAAAAA2S0AAAAAAADaLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1S0AAAAAAADVLQAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAANotAAAAAAAA2y0AAAAAAAAAAAAA2y0AAAAAAADcLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2i0AAAAAAADaLQAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwtAAAAAAAA3S0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3C0AAAAAAADcLQAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANstAAAAAAAA3S0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2y0AAAAAAADbLQAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAANUtAAAAAAAA1i0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1S0AAAAAAADVLQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAANotAAAAAAAA2y0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2i0AAAAAAADaLQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"paste",
					null,
					"AQAAAN4tAAAAAAAA7S0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3i0AAAAAAADeLQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAF0tAAAAAAAAXi0AAAAAAAAAAAAAXi0AAAAAAABiLQAAAAAAAAAAAABiLQAAAAAAAGYtAAAAAAAAAAAAAGYtAAAAAAAAZy0AAAAAAAAAAAAAZy0AAAAAAABoLQAAAAAAAAAAAABoLQAAAAAAAGktAAAAAAAAAAAAAGktAAAAAAAAai0AAAAAAAAAAAAAai0AAAAAAABrLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXS0AAAAAAABdLQAAAAAAAP///////+9/"
				],
				[
					333,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGstAAAAAAAAbS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAay0AAAAAAABrLQAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGwtAAAAAAAAbi0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbC0AAAAAAABsLQAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "His"
					},
					"AwAAAG0tAAAAAAAAbi0AAAAAAAAAAAAAbi0AAAAAAABvLQAAAAAAAAAAAABvLQAAAAAAAHAtAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbS0AAAAAAABtLQAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert_completion",
					{
						"completion": "HistoricalDataManager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HistoricalDataManager"
					},
					"AgAAAG0tAAAAAAAAbS0AAAAAAAADAAAASGlzbS0AAAAAAACCLQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcC0AAAAAAABwLQAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": ".r"
					},
					"AgAAAIItAAAAAAAAgy0AAAAAAAAAAAAAgy0AAAAAAACELQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgi0AAAAAAACCLQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"left_delete",
					null,
					"AQAAAIMtAAAAAAAAgy0AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAhC0AAAAAAACELQAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAIMtAAAAAAAAhC0AAAAAAAAAAAAAhC0AAAAAAACFLQAAAAAAAAAAAACFLQAAAAAAAIYtAAAAAAAAAAAAAIYtAAAAAAAAhy0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgy0AAAAAAACDLQAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert_completion",
					{
						"completion": "turnOnRealtimeBarsFor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "turnOnRealtimeBarsFor"
					},
					"AgAAAIMtAAAAAAAAgy0AAAAAAAAEAAAAdHVyboMtAAAAAAAAmC0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhy0AAAAAAACHLQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJwuAAAAAAAAnS4AAAAAAAAAAAAAnS4AAAAAAAChLgAAAAAAAAAAAAChLgAAAAAAAKUuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnC4AAAAAAACcLgAAAAAAAAAAAAAAAH5A"
				],
				[
					354,
					1,
					"paste",
					null,
					"AQAAAKUuAAAAAAAA2S4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApS4AAAAAAAClLgAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"left_delete",
					null,
					"AQAAAMcuAAAAAAAAxy4AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAyC4AAAAAAADILgAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "ff"
					},
					"AgAAAMcuAAAAAAAAyC4AAAAAAAAAAAAAyC4AAAAAAADJLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxy4AAAAAAADHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAK4wAAAAAAAArzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArjAAAAAAAACuMAAAAAAAAAAAAAAAAAAA"
				],
				[
					382,
					1,
					"cut",
					null,
					"AQAAAGQvAAAAAAAAZC8AAAAAAABJAQAAICAgIGRlZiByZWFsdGltZUJhcihzZWxmLCByZXFJZDogaW50LCB0aW1lOmludCwgb3Blbl86IGZsb2F0LCBoaWdoOiBmbG9hdCwgbG93OiBmbG9hdCwgY2xvc2U6IGZsb2F0LCB2b2x1bWU6IGZsb2F0LCB3YXA6IGZsb2F0LCBjb3VudDogaW50KToKICAgICAgICBzdXBlcigpLnJlYWx0aW1lQmFyKHJlcUlkLCB0aW1lLCBvcGVuXywgaGlnaCwgbG93LCBjbG9zZSwgdm9sdW1lLCB3YXAsIGNvdW50KQogICAgICAgIHByaW50KCJSZWFsVGltZUJhci4gVGlja2VySWQ6IiwgcmVxSWQsIHRpbWUsIC0xLCBvcGVuXywgaGlnaCwgbG93LCBjbG9zZSwgdm9sdW1lLCB3YXAsIGNvdW50KQo",
					"AQAAAAAAAAABAAAArTAAAAAAAABkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"left_delete",
					null,
					"AQAAAGMvAAAAAAAAYy8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAZC8AAAAAAABkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"left_delete",
					null,
					"AQAAAGIvAAAAAAAAYi8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYy8AAAAAAABjLwAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJBUAAAAAAAAkVQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkFQAAAAAAACQVAAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"paste",
					null,
					"AQAAAJFUAAAAAAAA2lUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkVQAAAAAAACRVAAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJBUAAAAAAAAkVQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkFQAAAAAAACQVAAAAAAAAAAAAAAAAAAA"
				],
				[
					398,
					1,
					"left_delete",
					null,
					"AQAAANpVAAAAAAAA2lUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA21UAAAAAAADbVQAAAAAAAAAAAAAAAAAA"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHRVAAAAAAAAdVUAAAAAAAAAAAAAdVUAAAAAAAB9VQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdFUAAAAAAAB0VQAAAAAAAP///////+9/"
				],
				[
					403,
					1,
					"paste",
					null,
					"AQAAAH1VAAAAAAAAs1UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfVUAAAAAAAB9VQAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"left_delete",
					null,
					"AQAAAKlVAAAAAAAAqVUAAAAAAAAJAAAAdGltZXN0YW1w",
					"AQAAAAAAAAABAAAAslUAAAAAAACpVQAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "time"
					},
					"BAAAAKlVAAAAAAAAqlUAAAAAAAAAAAAAqlUAAAAAAACrVQAAAAAAAAAAAACrVQAAAAAAAKxVAAAAAAAAAAAAAKxVAAAAAAAArVUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqVUAAAAAAACpVQAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"paste",
					null,
					"AgAAAN5VAAAAAAAA51UAAAAAAAAAAAAA51UAAAAAAADnVQAAAAAAAAQAAAB0aW1l",
					"AQAAAAAAAAABAAAA3lUAAAAAAADiVQAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"left_delete",
					null,
					"AQAAAIlVAAAAAAAAiVUAAAAAAAAJAAAAZGF0ZXRpbWUu",
					"AQAAAAAAAAABAAAAklUAAAAAAACJVQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "apps/autoTrader/TrackerProcessor.py",
			"settings":
			{
				"buffer_size": 9892,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAAcGAAAAAAAABwYAAAAAAAAnAAAAcHJpb3JpdHlfc2lnbmFsID0gcHlxdFNpZ25hbChzdHIsIGJvb2wp",
					"AQAAAAAAAAABAAAABwYAAAAAAAAuBgAAAAAAAP///////+9/"
				],
				[
					13,
					2,
					"left_delete",
					null,
					"AgAAAAMGAAAAAAAAAwYAAAAAAAAEAAAAICAgIAIGAAAAAAAAAgYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAABwYAAAAAAAADBgAAAAAAAAAAAAAAAAAA"
				],
				[
					19,
					4,
					"left_delete",
					null,
					"BAAAAFMKAAAAAAAAUwoAAAAAAABnAAAAc2VsZi5wcmlvcml0eV9zaWduYWwuY29ubmVjdChzZWxmLmJ1ZmZlcmVkX21hbmFnZXIuaGlzdG9yeV9tYW5hZ2VyLnNldFByaW9yaXR5Rm9yLCBRdC5RdWV1ZWRDb25uZWN0aW9uKU8KAAAAAAAATwoAAAAAAAAEAAAAICAgIEsKAAAAAAAASwoAAAAAAAAEAAAAICAgIEoKAAAAAAAASgoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAUwoAAAAAAAC6CgAAAAAAAP///////+9/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".b"
					},
					"AgAAAFkeAAAAAAAAWh4AAAAAAAAAAAAAWh4AAAAAAABbHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWR4AAAAAAABZHgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert_completion",
					{
						"completion": "buffered_manager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "buffered_manager"
					},
					"AgAAAFoeAAAAAAAAWh4AAAAAAAABAAAAYloeAAAAAAAAah4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWx4AAAAAAABbHgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AgAAAGseAAAAAAAAfB4AAAAAAAAAAAAAfB4AAAAAAAB8HgAAAAAAAA8AAABwcmlvcml0eV9zaWduYWw",
					"AQAAAAAAAAABAAAAax4AAAAAAAB6HgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAIIeAAAAAAAAgh4AAAAAAAAKAAAAdWlkLCBGYWxzZQ",
					"AQAAAAAAAAABAAAAjB4AAAAAAACCHgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\nDeta"
					},
					"BgAAAEweAAAAAAAATR4AAAAAAAAAAAAATR4AAAAAAABVHgAAAAAAAAAAAABVHgAAAAAAAFYeAAAAAAAAAAAAAFYeAAAAAAAAVx4AAAAAAAAAAAAAVx4AAAAAAABYHgAAAAAAAAAAAABYHgAAAAAAAFkeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATB4AAAAAAABMHgAAAAAAAAAAAAAAgHpA"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "ilObject"
					},
					"CAAAAFkeAAAAAAAAWh4AAAAAAAAAAAAAWh4AAAAAAABbHgAAAAAAAAAAAABbHgAAAAAAAFweAAAAAAAAAAAAAFweAAAAAAAAXR4AAAAAAAAAAAAAXR4AAAAAAABeHgAAAAAAAAAAAABeHgAAAAAAAF8eAAAAAAAAAAAAAF8eAAAAAAAAYB4AAAAAAAAAAAAAYB4AAAAAAABhHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWR4AAAAAAABZHgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"paste",
					null,
					"AgAAAFUeAAAAAAAA7R4AAAAAAAAAAAAA7R4AAAAAAADtHgAAAAAAAAwAAABEZXRhaWxPYmplY3Q",
					"AQAAAAAAAAABAAAAYR4AAAAAAABVHgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "\nstock_"
					},
					"CAAAAEweAAAAAAAATR4AAAAAAAAAAAAATR4AAAAAAABVHgAAAAAAAAAAAABVHgAAAAAAAFYeAAAAAAAAAAAAAFYeAAAAAAAAVx4AAAAAAAAAAAAAVx4AAAAAAABYHgAAAAAAAAAAAABYHgAAAAAAAFkeAAAAAAAAAAAAAFkeAAAAAAAAWh4AAAAAAAAAAAAAWh4AAAAAAABbHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATB4AAAAAAABMHgAAAAAAAAAAAAAAgHdA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "inf"
					},
					"AwAAAFseAAAAAAAAXB4AAAAAAAAAAAAAXB4AAAAAAABdHgAAAAAAAAAAAABdHgAAAAAAAF4eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWx4AAAAAAABbHgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAF4eAAAAAAAAXx4AAAAAAAAAAAAAXx4AAAAAAABgHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXh4AAAAAAABeHgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " self."
					},
					"BgAAAGAeAAAAAAAAYR4AAAAAAAAAAAAAYR4AAAAAAABiHgAAAAAAAAAAAABiHgAAAAAAAGMeAAAAAAAAAAAAAGMeAAAAAAAAZB4AAAAAAAAAAAAAZB4AAAAAAABlHgAAAAAAAAAAAABlHgAAAAAAAGYeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYB4AAAAAAABgHgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"paste",
					null,
					"AQAAAGYeAAAAAAAAdB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZh4AAAAAAABmHgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHQeAAAAAAAAdh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdB4AAAAAAAB0HgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "uid"
					},
					"AwAAAHUeAAAAAAAAdh4AAAAAAAAAAAAAdh4AAAAAAAB3HgAAAAAAAAAAAAB3HgAAAAAAAHgeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdR4AAAAAAAB1HgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "contract"
					},
					"CQAAAFUeAAAAAAAAVh4AAAAAAAAAAAAAVh4AAAAAAABWHgAAAAAAAAkAAABzdG9ja19pbmZWHgAAAAAAAFceAAAAAAAAAAAAAFceAAAAAAAAWB4AAAAAAAAAAAAAWB4AAAAAAABZHgAAAAAAAAAAAABZHgAAAAAAAFoeAAAAAAAAAAAAAFoeAAAAAAAAWx4AAAAAAAAAAAAAWx4AAAAAAABcHgAAAAAAAAAAAABcHgAAAAAAAF0eAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVR4AAAAAAABeHgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAIEeAAAAAAAAgR4AAAAAAACYAAAAY29udHJhY3RfZGV0YWlscyA9IERldGFpbE9iamVjdChzeW1ib2w9c3RvY2tfaW5mW0NvbnN0YW50cy5TWU1CT0xdLCBleGNoYW5nZT1zdG9ja19pbmZbJ2V4Y2hhbmdlJ10sIG51bWVyaWNfaWQ9bmV4dF91aWQsIGN1cnJlbmN5PXN0b2NrX2luZlsnY3VycmVuY3knXSk",
					"AQAAAAAAAAABAAAAgR4AAAAAAAAZHwAAAAAAAP///////+9/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAHkeAAAAAAAAeR4AAAAAAAAIAAAAICAgICAgICB4HgAAAAAAAHgeAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAgR4AAAAAAAB5HgAAAAAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "contract"
					},
					"CAAAAK4eAAAAAAAArx4AAAAAAAAAAAAArx4AAAAAAACwHgAAAAAAAAAAAACwHgAAAAAAALEeAAAAAAAAAAAAALEeAAAAAAAAsh4AAAAAAAAAAAAAsh4AAAAAAACzHgAAAAAAAAAAAACzHgAAAAAAALQeAAAAAAAAAAAAALQeAAAAAAAAtR4AAAAAAAAAAAAAtR4AAAAAAAC2HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArh4AAAAAAACuHgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABsWAAAAAAAAHBYAAAAAAAAAAAAAHBYAAAAAAAAoFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxYAAAAAAAAbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					2,
					"left_delete",
					null,
					"AgAAABwWAAAAAAAAHBYAAAAAAAAMAAAAICAgICAgICAgICAgGxYAAAAAAAAbFgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAKBYAAAAAAAAcFgAAAAAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\nself.buff"
					},
					"CwAAAJIWAAAAAAAAkxYAAAAAAAAAAAAAkxYAAAAAAACfFgAAAAAAAAAAAACfFgAAAAAAAKAWAAAAAAAAAAAAAKAWAAAAAAAAoRYAAAAAAAAAAAAAoRYAAAAAAACiFgAAAAAAAAAAAACiFgAAAAAAAKMWAAAAAAAAAAAAAKMWAAAAAAAApBYAAAAAAAAAAAAApBYAAAAAAAClFgAAAAAAAAAAAAClFgAAAAAAAKYWAAAAAAAAAAAAAKYWAAAAAAAApxYAAAAAAAAAAAAApxYAAAAAAACoFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhYAAAAAAACSFgAAAAAAAP///////+9/"
				],
				[
					109,
					1,
					"insert_completion",
					{
						"completion": "buffered_manager",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "buffered_manager"
					},
					"AgAAAKQWAAAAAAAApBYAAAAAAAAEAAAAYnVmZqQWAAAAAAAAtBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBYAAAAAAACoFgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALQWAAAAAAAAtRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBYAAAAAAAC0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"paste",
					null,
					"AQAAALUWAAAAAAAAxhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRYAAAAAAAC1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMYWAAAAAAAAxxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhYAAAAAAADGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAMYWAAAAAAAAxhYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAxxYAAAAAAADHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMYWAAAAAAAAyBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhYAAAAAAADGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "self.getCo"
					},
					"CgAAAMcWAAAAAAAAyBYAAAAAAAAAAAAAyBYAAAAAAADJFgAAAAAAAAAAAADJFgAAAAAAAMoWAAAAAAAAAAAAAMoWAAAAAAAAyxYAAAAAAAAAAAAAyxYAAAAAAADMFgAAAAAAAAAAAADMFgAAAAAAAM0WAAAAAAAAAAAAAM0WAAAAAAAAzhYAAAAAAAAAAAAAzhYAAAAAAADPFgAAAAAAAAAAAADPFgAAAAAAANAWAAAAAAAAAAAAANAWAAAAAAAA0RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxYAAAAAAADHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAANEWAAAAAAAA0hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RYAAAAAAADRFgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert_completion",
					{
						"completion": "getContractFor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getContractFor"
					},
					"AgAAAMwWAAAAAAAAzBYAAAAAAAAGAAAAZ2V0Q29uzBYAAAAAAADaFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hYAAAAAAADSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANoWAAAAAAAA3BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hYAAAAAAADaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"paste",
					null,
					"AQAAANsWAAAAAAAA7xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xYAAAAAAADbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ".keys"
					},
					"BQAAAO8WAAAAAAAA8BYAAAAAAAAAAAAA8BYAAAAAAADxFgAAAAAAAAAAAADxFgAAAAAAAPIWAAAAAAAAAAAAAPIWAAAAAAAA8xYAAAAAAAAAAAAA8xYAAAAAAAD0FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xYAAAAAAADvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPQWAAAAAAAA9hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAANsWAAAAAAAA3BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xYAAAAAAADbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPgWAAAAAAAA+hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BYAAAAAAAD4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAPkWAAAAAAAA+hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RYAAAAAAAD5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"cut",
					null,
					"AQAAAMcWAAAAAAAAxxYAAAAAAAA1AAAAc2VsZi5nZXRDb250cmFjdEZvcihbc2VsZi5mdWxsX3N0b2NrX2xpc3Qua2V5cygpXVswXSk",
					"AQAAAAAAAAABAAAA/BYAAAAAAADHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJIWAAAAAAAAkxYAAAAAAAAAAAAAkxYAAAAAAACfFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhYAAAAAAACSFgAAAAAAAP///////+9/"
				],
				[
					164,
					1,
					"paste",
					null,
					"AQAAAJ8WAAAAAAAA1BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxYAAAAAAACfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJIWAAAAAAAAkxYAAAAAAAAAAAAAkxYAAAAAAACfFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhYAAAAAAACSFgAAAAAAAP///////+9/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "contract"
					},
					"CQAAAKwWAAAAAAAArRYAAAAAAAAAAAAAkxYAAAAAAACTFgAAAAAAAAwAAAAgICAgICAgICAgICChFgAAAAAAAKIWAAAAAAAAAAAAAKIWAAAAAAAAoxYAAAAAAAAAAAAAoxYAAAAAAACkFgAAAAAAAAAAAACkFgAAAAAAAKUWAAAAAAAAAAAAAKUWAAAAAAAAphYAAAAAAAAAAAAAphYAAAAAAACnFgAAAAAAAAAAAACnFgAAAAAAAKgWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArBYAAAAAAACsFgAAAAAAAAAAAAAAAFhA"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKgWAAAAAAAAqRYAAAAAAAAAAAAAqRYAAAAAAACqFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBYAAAAAAACoFgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoWAAAAAAAAqxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhYAAAAAAACqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"cut",
					null,
					"AQAAAL8WAAAAAAAAvxYAAAAAAAAgAAAAW3NlbGYuZnVsbF9zdG9ja19saXN0LmtleXMoKV1bMF0",
					"AQAAAAAAAAABAAAA3xYAAAAAAAC/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"reindent",
					null,
					"AQAAAJMWAAAAAAAAnxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxYAAAAAAACTFgAAAAAAAAAAAAAAgHVA"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "\nlist9"
					},
					"CAAAAJ8WAAAAAAAAoBYAAAAAAAAAAAAAoBYAAAAAAACsFgAAAAAAAAAAAACTFgAAAAAAAJMWAAAAAAAADAAAACAgICAgICAgICAgIKAWAAAAAAAAoRYAAAAAAAAAAAAAoRYAAAAAAACiFgAAAAAAAAAAAACiFgAAAAAAAKMWAAAAAAAAAAAAAKMWAAAAAAAApBYAAAAAAAAAAAAApBYAAAAAAAClFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxYAAAAAAACfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAAKQWAAAAAAAApBYAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAApRYAAAAAAAClFgAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKQWAAAAAAAAphYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBYAAAAAAACkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAKUWAAAAAAAAxRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRYAAAAAAAClFgAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					3,
					"left_delete",
					null,
					"AwAAAMQWAAAAAAAAxBYAAAAAAAABAAAAXcMWAAAAAAAAwxYAAAAAAAABAAAAMMIWAAAAAAAAwhYAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAxRYAAAAAAADFFgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "key_list"
					},
					"CAAAAKAWAAAAAAAAoRYAAAAAAAAAAAAAoRYAAAAAAACiFgAAAAAAAAAAAACiFgAAAAAAAKMWAAAAAAAAAAAAAKMWAAAAAAAApBYAAAAAAAAAAAAApBYAAAAAAAClFgAAAAAAAAAAAAClFgAAAAAAAKYWAAAAAAAAAAAAAKYWAAAAAAAApxYAAAAAAAAAAAAApxYAAAAAAACoFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBYAAAAAAACgFgAAAAAAAAAAAAAAAFhA"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKgWAAAAAAAAqRYAAAAAAAAAAAAAqRYAAAAAAACqFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBYAAAAAAACoFgAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoWAAAAAAAAqxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhYAAAAAAACqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"paste",
					null,
					"AQAAAPoWAAAAAAAAAhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hYAAAAAAAD6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAIXAAAAAAAABBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhcAAAAAAAACFwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAMXAAAAAAAABBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxcAAAAAAAADFwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "contr"
					},
					"BQAAADsXAAAAAAAAPBcAAAAAAAAAAAAAPBcAAAAAAAA9FwAAAAAAAAAAAAA9FwAAAAAAAD4XAAAAAAAAAAAAAD4XAAAAAAAAPxcAAAAAAAAAAAAAPxcAAAAAAABAFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxcAAAAAAAA7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert_completion",
					{
						"completion": "contract",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "contract"
					},
					"AgAAADsXAAAAAAAAOxcAAAAAAAAFAAAAY29udHI7FwAAAAAAAEMXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBcAAAAAAABAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAM4WAAAAAAAAzxYAAAAAAAAAAAAAzxYAAAAAAADbFgAAAAAAAAAAAADbFgAAAAAAANwWAAAAAAAAAAAAANwWAAAAAAAA3RYAAAAAAAAAAAAA3RYAAAAAAADeFgAAAAAAAAAAAADeFgAAAAAAAN8WAAAAAAAAAAAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhYAAAAAAADOFgAAAAAAAP///////+9/"
				],
				[
					210,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAWAAAAAAAA4hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BYAAAAAAADgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAAOEWAAAAAAAA4hYAAAAAAAAAAAAA4hYAAAAAAADjFgAAAAAAAAAAAADjFgAAAAAAAOQWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert_completion",
					{
						"completion": "key_list",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "key_list"
					},
					"AgAAAOEWAAAAAAAA4RYAAAAAAAADAAAAa2V54RYAAAAAAADpFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5BYAAAAAAADkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAAD3FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAgHVA"
				],
				[
					223,
					1,
					"paste",
					null,
					"AQAAAPcWAAAAAAAAAhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xYAAAAAAAD3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "print("
					},
					"BgAAAPcWAAAAAAAA+BYAAAAAAAAAAAAA+BYAAAAAAAD5FgAAAAAAAAAAAAD5FgAAAAAAAPoWAAAAAAAAAAAAAPoWAAAAAAAA+xYAAAAAAAAAAAAA+xYAAAAAAAD8FgAAAAAAAAAAAAD8FgAAAAAAAP0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xYAAAAAAAD3FgAAAAAAAAAAAAAAAFhA"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAgXAAAAAAAACRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBcAAAAAAAAIFwAAAAAAAP///////+9/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "\nrp"
					},
					"BAAAAAkXAAAAAAAAChcAAAAAAAAAAAAAChcAAAAAAAAWFwAAAAAAAAAAAAAWFwAAAAAAABcXAAAAAAAAAAAAABcXAAAAAAAAGBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRcAAAAAAAAJFwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					2,
					"left_delete",
					null,
					"AgAAABcXAAAAAAAAFxcAAAAAAAABAAAAcBYXAAAAAAAAFhcAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAGBcAAAAAAAAYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAABYXAAAAAAAAFxcAAAAAAAAAAAAAFxcAAAAAAAAYFwAAAAAAAAAAAAAYFwAAAAAAABkXAAAAAAAAAAAAABkXAAAAAAAAGhcAAAAAAAAAAAAAGhcAAAAAAAAbFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhcAAAAAAAAWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABsXAAAAAAAAHRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxcAAAAAAAAbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAAeFwAAAAAAAB8XAAAAAAAAAAAAAB8XAAAAAAAAIBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBcAAAAAAAAcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACAXAAAAAAAAIhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBcAAAAAAAAgFwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "ke"
					},
					"AgAAACEXAAAAAAAAIhcAAAAAAAAAAAAAIhcAAAAAAAAjFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRcAAAAAAAAhFwAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert_completion",
					{
						"completion": "key_list",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "key_list"
					},
					"AgAAACEXAAAAAAAAIRcAAAAAAAACAAAAa2UhFwAAAAAAACkXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxcAAAAAAAAjFwAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"paste",
					null,
					"AgAAABwXAAAAAAAAJxcAAAAAAAAAAAAAJxcAAAAAAAAnFwAAAAAAAA4AAAB0eXBlKGtleV9saXN0KQ",
					"AQAAAAAAAAABAAAAKhcAAAAAAAAcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "type("
					},
					"BQAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAAeFwAAAAAAAB8XAAAAAAAAAAAAAB8XAAAAAAAAIBcAAAAAAAAAAAAAIBcAAAAAAAAhFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBcAAAAAAAAcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAC0XAAAAAAAALhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRcAAAAAAAAtFwAAAAAAAP///////+9/"
				],
				[
					252,
					1,
					"left_delete",
					null,
					"AQAAALAWAAAAAAAAsBYAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAsRYAAAAAAACxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"left_delete",
					null,
					"AQAAAMsWAAAAAAAAyxYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAzBYAAAAAAADMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"left_delete",
					null,
					"AQAAAPUWAAAAAAAA9RYAAAAAAAAfAAAAcHJpbnQoa2V5X2xpc3RbMF0pCiAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAA9RYAAAAAAAAUFwAAAAAAAAAAAAAAAFhA"
				],
				[
					263,
					2,
					"left_delete",
					null,
					"AgAAAOkWAAAAAAAA6RYAAAAAAAAkAAAAICAgICAgICAgICAgcHJpbnQodHlwZShrZXlfbGlzdFswXSkp6BYAAAAAAADoFgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAADRcAAAAAAADpFgAAAAAAAAAAAAAAAAAA"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "\"How"
					},
					"BAAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA4BYAAAAAAADhFgAAAAAAAAAAAADhFgAAAAAAAOIWAAAAAAAAAAAAAOIWAAAAAAAA4xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xYAAAAAAADfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAOMWAAAAAAAA5BYAAAAAAAAAAAAA5BYAAAAAAADlFgAAAAAAAAAAAADlFgAAAAAAAOYWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xYAAAAAAADjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAOYWAAAAAAAA5xYAAAAAAAAAAAAA5xYAAAAAAADoFgAAAAAAAAAAAADoFgAAAAAAAOkWAAAAAAAAAAAAAOkWAAAAAAAA6hYAAAAAAAAAAAAA6hYAAAAAAADrFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hYAAAAAAADmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": " empyu?"
					},
					"BwAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA7BYAAAAAAADtFgAAAAAAAAAAAADtFgAAAAAAAO4WAAAAAAAAAAAAAO4WAAAAAAAA7xYAAAAAAAAAAAAA7xYAAAAAAADwFgAAAAAAAAAAAADwFgAAAAAAAPEWAAAAAAAAAAAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIWAAAAAAAA8xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hYAAAAAAADyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"left_delete",
					null,
					"AQAAAPAWAAAAAAAA8BYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA8RYAAAAAAADxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAO8WAAAAAAAA8BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xYAAAAAAADvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAOAWAAAAAAAA4RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BYAAAAAAADgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAAOAWAAAAAAAA4BYAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xYAAAAAAADfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAPwWAAAAAAAA/RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BYAAAAAAAD8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAPQWAAAAAAAA9RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BYAAAAAAAD0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAP0WAAAAAAAA/hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RYAAAAAAAD9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": ".emit"
					},
					"BQAAAGwXAAAAAAAAbRcAAAAAAAAAAAAAbRcAAAAAAABuFwAAAAAAAAAAAABuFwAAAAAAAG8XAAAAAAAAAAAAAG8XAAAAAAAAcBcAAAAAAAAAAAAAcBcAAAAAAABxFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBcAAAAAAABsFwAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANwjAAAAAAAA3iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CMAAAAAAAAAJAAAAAAAAP///////+9/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANwjAAAAAAAA3SMAAAAAAAAAAAAA3SMAAAAAAADlIwAAAAAAAAAAAADlIwAAAAAAAOUjAAAAAAAAJgAAACMgc2VsZi5wcmlvcml0eV9zaWduYWwuZW1pdCh1aWQsIFRydWUp",
					"AQAAAAAAAAABAAAA3CMAAAAAAAACJAAAAAAAAP///////+9/"
				],
				[
					320,
					1,
					"paste",
					null,
					"AQAAAOUjAAAAAAAARyQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SMAAAAAAADlIwAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					3,
					"left_delete",
					null,
					"AwAAANgjAAAAAAAA2CMAAAAAAAAEAAAAICAgINQjAAAAAAAA1CMAAAAAAAAEAAAAICAgINMjAAAAAAAA0yMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA3CMAAAAAAADcIwAAAAAAAAAAAAAAAH9A"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "placeCombo"
					},
					"CwAAAHsOAAAAAAAAfA4AAAAAAAAAAAAAfA4AAAAAAAB8DgAAAAAAAAoAAABwbGFjZU9yZGVyfA4AAAAAAAB9DgAAAAAAAAAAAAB9DgAAAAAAAH4OAAAAAAAAAAAAAH4OAAAAAAAAfw4AAAAAAAAAAAAAfw4AAAAAAACADgAAAAAAAAAAAACADgAAAAAAAIEOAAAAAAAAAAAAAIEOAAAAAAAAgg4AAAAAAAAAAAAAgg4AAAAAAACDDgAAAAAAAAAAAACDDgAAAAAAAIQOAAAAAAAAAAAAAIQOAAAAAAAAhQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQ4AAAAAAAB7DgAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "Order"
					},
					"BQAAAIUOAAAAAAAAhg4AAAAAAAAAAAAAhg4AAAAAAACHDgAAAAAAAAAAAACHDgAAAAAAAIgOAAAAAAAAAAAAAIgOAAAAAAAAiQ4AAAAAAAAAAAAAiQ4AAAAAAACKDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQ4AAAAAAACFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"left_delete",
					null,
					"AQAAAGwMAAAAAAAAbAwAAAAAAAANAAAALmliX2ludGVyZmFjZQ",
					"AQAAAAAAAAABAAAAbAwAAAAAAAB5DAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"python syntax",
				"Build With: Python - Syntax Check"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"prett",
				"Pretty JSON: Format JSON"
			],
			[
				"install packe",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"Install Package Control",
				"Install Package Control"
			],
			[
				"set syntax html",
				"Set Syntax: HTML"
			],
			[
				"wrap",
				"HTML: Wrap Selection With Tag"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 443.0,
		"history":
		[
			"python3 --version",
			"python --version",
			"import sys; print(sys.executable)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/tradeMaker",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/run"
	],
	"file_history":
	[
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/DataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/appLauncher.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivityNew.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/tradeMaker.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/AppLauncherWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/IBConnector.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/TradeManagement/OrderManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/comparisons/ComparisonDataWrapper.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/comparisons/ComparisonProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/IBConnectivity.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/HistoryManagerImproved.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/SymbolManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/tradeMaker/TickerProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/listManaging/listManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/SymbolManagerImproved.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/autoTrader/TrackerProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/autoTrader/LiveBufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/FinazonDataManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/generalFunctionality/GenFunctions.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/BufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/junkFolder/testing.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/HistoryManagement/IndicatorProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/apps/autoTrader/autoTrader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/IB_apps.sublime-project",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/dataHandling/Constants.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_apps/junkFolder/order_test.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/junkFolder/order_test.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/DataBuffer.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/BufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/HistoricalDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/autoTrader/TrackerProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/IBConnector.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/IndicatorProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/appLauncher.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/TradeManagement/OrderManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/tradeMaker/TickerProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/tradeMaker/tradeMaker.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/generalFunctionality/GenFunctions.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/polygonDownload/dataDownloader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/polygonDownload/DataDownloaderWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/polygonDownload/polygonDownloader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/junkFolder/back_test_momentum.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/Constants.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/autoTrader/autoTrader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/optionPositions/OptionPositionWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/AppLauncherWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/tradeMaker/TradingWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/positionManaging/positionManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/alerting/alertManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/autoTrader/AutoTraderWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/alerting/AlertProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/alerting/AlertWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/UserDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/FinazonDataManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/tradeMaker/OrderDataModel.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/portfolioiManaging/portfolioManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/customWidgets/StockListTab.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/run/suite",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/qtGeneration/AppLauncher_UI.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/positionManaging/PositionWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/positionManaging/__pycache__/PositionWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/dataDownloading/DataDownloaderWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/auto_trader/TrackerProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/auto_trader/AutoTraderWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/qtGeneration/AutoTrader_UI.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/auto_trader/autoTrader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/auto_trader/alertManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/OptionManagement/OptionChainManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/comparisons/ComparisonWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/junkFolder/copyright_header.txt",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/IBConnectivity.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/TelegramBot.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/copyright_bash.sh",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/junkFolder/copyright_bash.sh",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/junkFolder/bash.sh",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/generalUIFunctionality.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/comparisons/ComparisonDataWrapper.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/comparisons/comparisonLists.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/DataProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/positionManaging/PositionManagerWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/comparisons/ComparisonProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/movers/MoversWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/movers/moversLists.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/customWidgets/PlotWidgets/ComparisonPlotWidget.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/customWidgets/OptionTabWidget.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/TradeManagement/PositionDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/optionPositions/optionsPositionListing.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/uiComps/TableModels.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/SymbolManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/IndicatorProcessor (Jelmers-Mac-mini.local's conflicted copy 2024-04-01).py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/LiveBufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/listManaging/listManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/dataDownloading/dataDownloader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/apps/movers/MoversProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/DataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/FinazonBufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/.gitignore",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/SpecBufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/dataHandling/HistoryManagement/BufferedManager copy.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/IB_trading_apps/data/api_keys.json",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/data/telegram_bot_info.json",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/HistoryManagement/DataBuffer.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/HistoryManagement/IndicatorProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/alerting/AlertProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/alerting/alertManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/generalFunctionality/GenFunctions.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/junkFolder/replace.txt",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/TelegramBot.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/HistoryManagement/FinazonDataManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/Constants.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/appLauncher.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/HistoryManagement/BufferedManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/movers/MoversProcessor.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/UserDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/polygonDownload/polygonDownloader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/IBConnector.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/AppLauncherWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/data/api_keys.json",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/polygonDownload/dataDownloader.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/tradeMaker/tradeMaker.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/polygonDownload/DataDownloaderWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/optionPositions/optionsPositionListing.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/movers/MoversWindow.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/dataHandling/HistoryManagement/HistoricalDataManagement.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/movers/moversLists.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/positionManaging/positionManager.py",
		"/Users/vriesdejelmer/Dropbox/pythonProjects/tradingAppsIB/apps/tradeRunner/tradeRunner.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"IBConnectivity",
			"from dataHandling.IBConnectivityNew import IBConnectivity\n",
			"orderEdit",
			"order_update_signal",
			"ib_interface",
			"t_order_id = self.ib_interface.next_order_ID",
			"placeOrder",
			"OrderMa",
			"placeOrd",
			"placeBracketOrder",
			"placeCom",
			"'placeOrder'",
			"def placeOrder",
			"placeOrder",
			"lds.append(make_field( contract.conId))",
			".submit_button.clicked.connect(self.placeComboOrder)",
			".order_manager.ib_interface.order_update_signal.connect(self.orderUpdate, Qt.Queu",
			"der_manager = OrderManager()",
			"import Order",
			"from Order",
			"from OrderM",
			"import OrderManager",
			"placeOrder",
			"placeBracketOrder",
			"open_order_request",
			"ib_request_signal",
			"def or",
			"order_update_signal = ",
			"reqRealTimeBars",
			"f.priority_signal.emit(uid, True)",
			"makeRequest",
			"HistoricalDataManager.turnOnRealtimeBarsFor",
			"makeReq",
			"q_type = request['type']",
			"getContractFor",
			"buffered_manager",
			"lf.cancel_real_time_request.connect(self.data_manager.turnOffRea",
			"f, reqId: TickerId, time:int",
			"getContractFor",
			"contract",
			"_uid_by_req",
			"turnOnRealtimeBarsFor",
			"real_time_request",
			"DetailObject",
			"priority_signal",
			"prio",
			"class De",
			"ContractDe",
			"contract",
			"def makeRequest",
			"self.data_manager",
			"self.history_manager",
			"history_manager",
			"class Live",
			"print(",
			"ComparisonProcessor.recalculateGraphLine",
			"ComparisonDataWrapper.updatePrimaryGraphData",
			"er_app = AutoTraderManager(history_manager",
			"history_manager",
			"open_move",
			".HistoryManagerImprove",
			"DataManager",
			"OrderMana",
			"self.ib_request_signal.emit({'type': 'cancel",
			"startConnection",
			"queue_timer",
			"(not (self.queue_timer.isActive())) and self.ready",
			"(str, flo",
			"latest_price_sign",
			"sub_signal['price']",
			"sub_signal['type']",
			"apiU",
			"apiUpdate",
			"UNDERLYING_PRICE_UPDATE",
			"ask",
			"str,",
			"str, fl",
			"price",
			"latest_price_signal",
			"isOptionRequest",
			".emit(",
			"priceReqIsActive",
			"snapshot",
			"equest['snapshot'] = self.snapshot",
			"f self.priceReqIsActive:",
			"Err",
			"hist",
			"isHistoryRequest",
			"lf.history_error.emit(req_id)",
			"ib_request_signal",
			"ib_request_signal.emit",
			"ib_request_signal",
			"ib_interface",
			"self.ib_interface.getActiveReqCount() < self.queue_cap",
			"f self.ib_interface.getActiveReqCount() < self.queue_cap",
			"def requestMarketData",
			"requestMarketData",
			"elf.price_request_signal.connect(self.history_manager.requestMarketData, Qt.Qu",
			"y_manager.api_updater.connect(self.apiUpdate, Qt.QueuedConnection, run_functi",
			"apiUpdate",
			"buffered_manager",
			"ListManager",
			"y_manager = self.getHistoryManagerIB(identifier)",
			"Symbo",
			"super(",
			"HistoricalDataManager",
			"ndling.HistoryManagement.IBConnectivityNew",
			"ocessHistoricalBar(self, req_id, bar)",
			"Histor",
			"def run",
			"QThread",
			"DetailObject",
			"pubsub",
			"stair_tracker",
			"OrderM",
			"stair_manager_on=",
			"f stair_manager_on:",
			"s SymbolManager(IBConnectivity, QObject):",
			"Impro",
			"openConnection",
			"startWorkerThread",
			"Symbo",
			"class IB",
			"queue_timer",
			"if (not (self.queue_timer.isActive())) and self.ready",
			"restart_timer",
			"finished",
			"manager = SymbolManager(name=identifier)"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SymbolManager",
			"from dataHandling.UserDataManagement"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": false,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46889,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								46692,
								46692
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 38,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 15606.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "IBConnector.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8329,
						"regions":
						{
						},
						"selection":
						[
							[
								4710,
								4710
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1261.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "apps/tradeMaker/TradingWindow.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7168,
						"regions":
						{
						},
						"selection":
						[
							[
								4969,
								4984
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1803.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "apps/tradeMaker/tradeMaker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24606,
						"regions":
						{
						},
						"selection":
						[
							[
								7117,
								7117
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2210.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dataHandling/IBConnectivity.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18788,
						"regions":
						{
						},
						"selection":
						[
							[
								9241,
								9251
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3809.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dataHandling/IBConnectivityNew.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11536,
						"regions":
						{
						},
						"selection":
						[
							[
								11535,
								11535
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4508.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "dataHandling/TradeManagement/OrderManagement.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36215,
						"regions":
						{
						},
						"selection":
						[
							[
								5918,
								5932
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2447.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "apps/autoTrader/LiveBufferedManager.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5122,
						"regions":
						{
						},
						"selection":
						[
							[
								1571,
								1571
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "dataHandling/HistoryManagement/HistoricalDataManagement.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26416,
						"regions":
						{
						},
						"selection":
						[
							[
								2430,
								2423
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1117.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "apps/autoTrader/TrackerProcessor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9892,
						"regions":
						{
						},
						"selection":
						[
							[
								3180,
								3180
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 952.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 116.0
	},
	"output.find_results":
	{
		"height": 104.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "IB_apps.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ib",
				"IBConnectivity.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 237.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
