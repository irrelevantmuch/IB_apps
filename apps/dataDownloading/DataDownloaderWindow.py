
# Copyright (c) 2024 Jelmer de Vries
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation in its latest version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'optionsGraph.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import QMainWindow
from uiComps.qtGeneration.DataDownloader_UI import Ui_MainWindow as DataDownloader_UI
from dataHandling.Constants import Constants

from generalFunctionality.SymbolFinderImpl import SymbolFinderImplementation


class DataDownloaderWindow(QMainWindow, DataDownloader_UI, SymbolFinderImplementation):

    bar_types = ["1 min", "2 mins", "3 mins", Constants.FIVE_MIN_BAR, Constants.FIFTEEN_MIN_BAR, "30 mins", Constants.HOUR_BAR, Constants.DAY_BAR]

    current_selection = None

    def __init__(self):
        QMainWindow.__init__(self)
        DataDownloader_UI.__init__(self)
        SymbolFinderImplementation.__init__(self)

        self.setupUi(self)
        self.connectSearchField()
        self.connectActions()
        self.fillOutFields()

    def connectActions(self):
        self.fetch_button.clicked.connect(self.fetchHistoricalData)

    def fillOutFields(self):
        self.bar_combobox.addItems(self.bar_types)

        self.bar_combobox.setCurrentIndex(self.bar_combobox.count()-1)
    
    def dataUpdateAPI(self, signal, sub_signal):
        print(f"DataDownloaderWindow.dataUpdateAPI: {signal}")
        self.contractUpdate(signal)

